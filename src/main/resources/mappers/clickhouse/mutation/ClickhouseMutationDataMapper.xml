<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.infrastructure.repository.clickhouse.mutation.ClickhouseMutationMapper">

    <sql id="select">
        SELECT DISTINCT
        ged.genetic_profile_stable_id AS molecularProfileId,
        replaceOne(ged.sample_unique_id, concat(ged.cancer_study_identifier, '_'), '') AS sampleId,
        replaceOne(ged.patient_unique_id, concat(ged.cancer_study_identifier, '_'), '') AS patientId,
        ged.entrez_gene_id AS entrezGeneId,
        ged.cancer_study_identifier AS studyId
        <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
            ,
            m.center AS "center",
            m.mutation_status AS "mutationStatus",
            m.validation_status AS "validationStatus",
            m.tumor_alt_count AS "tumorAltCount",
            m.tumor_ref_count AS "tumorRefCount",
            m.normal_alt_count AS "normalAltCount",
            m.normal_ref_count AS "normalRefCount",
            m.amino_acid_change AS "aminoAcidChange",
            me.chr AS "chr",
            me.start_position AS "startPosition",
            me.end_position AS "endPosition",
            me.reference_allele AS "referenceAllele",
            me.tumor_seq_allele AS "tumorSeqAllele",
            me.protein_change AS "proteinChange",
            ged.mutation_type AS mutationType,
            me.ncbi_build AS "ncbiBuild",
            me.variant_type AS variantType,
            me.refseq_mrna_id AS "refseqMrnaId",
            me.protein_pos_start AS "proteinPosStart",
            me.protein_pos_end AS "proteinPosEnd",
            me.keyword AS "keyword",
            m.annotation_json AS "annotationJSON",
            NULLIF(ged.driver_filter, 'NA') AS "driverFilter",
            ada.driver_filter_annotation AS "driverFilterAnnotation",
            NULLIF(ged.driver_tiers_filter, 'NA') AS "driverTiersFilter",
            ada.driver_tiers_filter_annotation AS "driverTiersFilterAnnotation"
        </if>
        <if test="projection == 'DETAILED'">
            ,
            g.entrez_gene_id AS "gene.entrezGeneId",
            g.hugo_gene_symbol AS "gene.hugoGeneSymbol",
            g.type AS "gene.type"
            ,
            <include refid="getAlleleSpecificCopyNumber">
                <property name="prefix" value="alleleSpecificCopyNumber."/>
            </include>
        </if>
    </sql>

    <sql id="getAlleleSpecificCopyNumber">
        ascn.ascn_integer_copy_number AS "${prefix}ascnIntegerCopyNumber",
        ascn.ascn_method AS "${prefix}ascnMethod",
        ascn.ccf_expected_copies_upper AS "${prefix}ccfExpectedCopiesUpper",
        ascn.ccf_expected_copies AS "${prefix}ccfExpectedCopies",
        ascn.clonal AS "${prefix}clonal",
        ascn.minor_copy_number AS "${prefix}minorCopyNumber",
        ascn.expected_alt_copies AS "${prefix}expectedAltCopies",
        ascn.total_copy_number AS "${prefix}totalCopyNumber"
    </sql>

    <sql id="projectionAndLimitFilter">
        <choose>
            <!-- Case 1: SUMMARY or DETAILED -->
            <when test="projection == 'SUMMARY' || projection == 'DETAILED'">
                <if test="sortBy != null">
                    ORDER BY "${sortBy}" ${direction}
                </if>
                <if test="limit != null and limit != 0">
                    LIMIT #{limit} OFFSET #{offset}
                </if>
            </when>

            <!-- Case 2: ID -->
            <when test="projection == 'ID'">
                ORDER BY genomic_event_derived.genetic_profile_stable_id ASC,
                genomic_event_derived.sample_unique_id ASC,
                genomic_event_derived.entrez_gene_id ASC
                <if test="limit != null and limit != 0">
                    LIMIT #{limit} OFFSET #{offset}
                </if>
            </when>
        </choose>
    </sql>

    <sql id="derivedTableWhereFilter">
        <where>
            <!-- Filter by sample IDs if present -->
            <if test="allSampleIds != null and !allSampleIds.isEmpty()">
                replaceOne(genomic_event_derived.sample_unique_id, concat(genomic_event_derived.cancer_study_identifier, '_'), '')
                IN
                <foreach item="sampleId" collection="allSampleIds" open="(" separator="," close=")">
                    #{sampleId}
                </foreach>
            </if>

            <!-- Filter by molecular profile IDs if present -->
            <if test="allMolecularProfileIds != null and !allMolecularProfileIds.isEmpty()">
                <if test="allSampleIds != null and !allSampleIds.isEmpty()">
                    AND
                </if>
                genomic_event_derived.genetic_profile_stable_id IN
                <foreach item="profileId" collection="allMolecularProfileIds" open="(" separator="," close=")">
                    #{profileId}
                </foreach>
            </if>

            <!-- Filter by entrezGeneIds if present -->
            <if test="_parameter.containsKey('entrezGeneIds') and entrezGeneIds != null and !entrezGeneIds.isEmpty()">
                <if test="(allSampleIds != null and !allSampleIds.isEmpty()) or (allMolecularProfileIds != null and !allMolecularProfileIds.isEmpty())">
                    AND
                </if>
                genomic_event_derived.entrez_gene_id IN
                <foreach item="geneId" collection="entrezGeneIds" open="(" separator="," close=")">
                    #{geneId}
                </foreach>
            </if>
            --         Extra guard to protect retrieving other types of event from derived table
            AND genomic_event_derived.genetic_profile_stable_id LIKE '%_mutations'
        </where>
    </sql>
    

    <sql id="from">
        FROM genomic_event_derived ged
        INNER JOIN sample s
            ON s.stable_id = replaceOne(ged.sample_unique_id, concat(ged.cancer_study_identifier, '_'), '')
        INNER JOIN mutation m
            ON m.sample_id = s.internal_id
        AND m.entrez_gene_id = ged.entrez_gene_id
        INNER JOIN mutation_event me
            ON me.mutation_event_id = m.mutation_event_id
        LEFT JOIN alteration_driver_annotation ada
            ON ada.sample_id = s.internal_id
            AND ada.genetic_profile_id = m.genetic_profile_id
            AND ada.alteration_event_id = m.mutation_event_id
        <if test="projection == 'DETAILED'">
            INNER JOIN gene g
            ON g.entrez_gene_id = ged.entrez_gene_id
            <include refid="includeAlleleSpecificCopyNumber"/>
        </if>
        
    </sql>
    
    <sql id="includeAlleleSpecificCopyNumber">
        LEFT JOIN allele_specific_copy_number ascn ON m.mutation_event_id = allele_specific_copy_number.mutation_event_id
        AND m.genetic_profile_id = allele_specific_copy_number.genetic_profile_id
        AND m.sample_id = allele_specific_copy_number.sample_id
    </sql>
    
    <!--    This is for ID projection-->
    <select id="getMutationsInMultipleMolecularProfilesId" resultType="org.cbioportal.legacy.model.Mutation">
        SELECT DISTINCT
        genomic_event_derived.genetic_profile_stable_id AS "molecularProfileId",
        replaceOne(genomic_event_derived.sample_unique_id, concat(genomic_event_derived.cancer_study_identifier, '_'), '') AS "sampleId",
        genomic_event_derived.patient_unique_id AS "patientId",
        genomic_event_derived.entrez_gene_id AS "entrezGeneId",
        genomic_event_derived.cancer_study_identifier AS "studyId"
        from genomic_event_derived
        <include refid="derivedTableWhereFilter"/>
        <include refid="projectionAndLimitFilter"/>
    </select>

    <!--    This is for SUMMARY projection-->
    <select id="getSummaryMutationsInMultipleMolecularProfiles" resultType="org.cbioportal.legacy.model.Mutation">
        <include refid="select"/>
        <include refid="from"/>
        <include refid="derivedTableWhereFilter"/>
        <include refid="projectionAndLimitFilter"/>
    </select>

    <!--    This is for DETAILED projection-->
    <select id="getDetailedMutationsInMultipleMolecularProfiles" resultType="org.cbioportal.legacy.model.Mutation">
        <include refid="select"/>
        <include refid="from"/>
        <include refid="derivedTableWhereFilter"/>
        <include refid="projectionAndLimitFilter"/>
    </select>


    <!--    This is for META projection-->
    <select id="getMetaMutationsInMultipleMolecularProfiles"
            resultType="org.cbioportal.legacy.model.meta.MutationMeta">
        SELECT
        COUNT(*) AS "totalCount",
        COUNT(DISTINCT sample_unique_id) AS "sampleCount"
        FROM genomic_event_derived
        <include refid="derivedTableWhereFilter"/>
    </select>
</mapper>