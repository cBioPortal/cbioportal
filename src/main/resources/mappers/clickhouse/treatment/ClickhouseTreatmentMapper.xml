<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
        namespace="org.cbioportal.infrastructure.repository.clickhouse.treatment.ClickhouseTreatmentMapper">

    <resultMap id="PatientTreatment" type="org.cbioportal.legacy.model.PatientTreatment">
        <constructor>
            <arg column="treatment" javaType="String"/>
            <arg column="count" javaType="_int"/>
        </constructor>
    </resultMap>
    <select id="getPatientTreatments" resultMap="PatientTreatment">
        SELECT
        value AS treatment,
        count(DISTINCT patient_unique_id) AS count
        FROM clinical_event_derived
        <where>
            lower(event_type) = 'treatment'
            AND key = 'AGENT'
            AND
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingPatientId"/>
        </where>
        GROUP BY value
    </select>

    <select id="getPatientTreatmentCounts" resultType="int">
        SELECT
        count(DISTINCT patient_unique_id) AS totalPatients
        FROM sample_derived
        <where>
            patient_unique_id IN (
            SELECT
            patient_unique_id
            FROM clinical_event_derived
            <where>
                lower(event_type) = 'treatment'
                AND key = 'AGENT'
                AND
                <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingPatientId"/>
            </where>
            )
        </where>
    </select>

    <select id="getTotalSampleTreatmentCounts" resultType="int">
        SELECT
        count(distinct ced.value) AS totalSamples
        FROM clinical_event_derived ced
        <where>
            AND key = 'SAMPLE_ID'
            AND (event_type ILIKE 'Sample Acquisition' OR event_type ILIKE 'SPECIMEN')
            AND
            concat(ced.cancer_study_identifier, '_', ced.value) IN ( <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.sampleUniqueIdsFromStudyViewFilter"/>)
            AND
            patient_unique_id IN (
            SELECT
            patient_unique_id
            FROM clinical_event_derived
            <where>
                lower(event_type) = 'treatment'
                AND key = 'AGENT'
                AND
                <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingPatientId"/>
            </where>
            )
        </where>
    </select>

    <resultMap id="SampleTreatmentCount" type="org.cbioportal.legacy.model.SampleTreatment">
        <constructor>
            <arg column="treatment" javaType="String"/>
            <arg column="preSampleCount" javaType="_int"/>
            <arg column="postSampleCount" javaType="_int"/>
        </constructor>
    </resultMap>
    <!-- Count (Pre/Post) Sample Acquisition Events for every Treatment per Patient -->
    <select id="getSampleTreatmentCounts" resultMap="SampleTreatmentCount">
        <!-- Nested sub query to grab minimum sample acquisition event  and also filter out duplicates -->
        WITH sample_acquisition_events AS (
        SELECT
        ced.value AS sample_id,
        ced.patient_unique_id,
        min(ced.start_date) AS time_taken,
        ced.cancer_study_identifier AS cancer_study_identifier
        FROM clinical_event_derived ced
        <where>
            key = 'SAMPLE_ID'
            AND (event_type ILIKE 'Sample Acquisition' OR event_type ILIKE 'SPECIMEN')
        </where>
        GROUP BY patient_unique_id, ced.value, cancer_study_identifier
        ),
        <!-- Nested sub query to grab minimum treatment event. When there are multiple treatments that are of the same
        type we only care about the first treatment.
         -->
        treatments AS (
        SELECT
        patient_unique_id,
        value AS treatment,
        argMin(start_date, start_date) AS treatment_time_taken
        FROM clinical_event_derived
        <where>
            lower(event_type) = 'treatment'
            AND key = 'AGENT'
        </where>
        GROUP BY patient_unique_id, value
        )
        SELECT
        countIf(ced.sample_id,ced.time_taken &lt;= treatments.treatment_time_taken) AS preSampleCount,
        countIf(ced.sample_id, ced.time_taken &gt; treatments.treatment_time_taken) AS postSampleCount,
        treatments.treatment AS treatment
        FROM sample_acquisition_events ced
        INNER JOIN treatments ON treatments.patient_unique_id = ced.patient_unique_id
        <where>
            concat(ced.cancer_study_identifier, '_', ced.sample_id) IN ( <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.sampleUniqueIdsFromStudyViewFilter"/>)
        </where>
        GROUP BY treatments.treatment
    </select>

</mapper>