<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
        namespace="org.cbioportal.infrastructure.repository.clickhouse.clinical_data.ClickhouseClinicalDataMapper">

    <select id="getSampleClinicalDataFromStudyViewFilter" resultType="org.cbioportal.legacy.model.ClinicalData">
        SELECT
        internal_id as internalId,
        replaceOne(sample_unique_id, concat(cancer_study_identifier, '_'), '') as sampleId,
        replaceOne(patient_unique_id, concat(cancer_study_identifier, '_'), '') as patientId,
        attribute_name as attrId,
        attribute_value as attrValue,
        cancer_study_identifier as studyId
        FROM clinical_data_derived
        <where>
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
        </where>
        <if test="attributeIds != null and !attributeIds.isEmpty()">
            AND attribute_name IN
            <foreach item="attributeId" collection="attributeIds" open="(" separator="," close=")">
                #{attributeId}
            </foreach>
        </if>
        AND type = 'sample'
    </select>

    <select id="getPatientClinicalDataFromStudyViewFilter" resultType="org.cbioportal.legacy.model.ClinicalData">
        SELECT
        internal_id as internalId,
        replaceOne(patient_unique_id, concat(cancer_study_identifier, '_'), '') as patientId,
        attribute_name as attrId,
        attribute_value as attrValue,
        cancer_study_identifier as studyId
        FROM clinical_data_derived
        <where>
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingPatientId"/>
        </where>
        <if test="attributeIds != null and !attributeIds.isEmpty()">
            AND attribute_name IN
            <foreach item="attributeId" collection="attributeIds" open="(" separator="," close=")">
                #{attributeId}
            </foreach>
        </if>
        AND type = 'patient'
    </select>

    <!-- for /clinical-data-counts/fetch (returns ClinicalData) which will then be converted to clinicalDataCountItems -->
    <select id="getClinicalDataCounts" resultMap="ClinicalDataCountItemResultMap">
        <include refid="getClinicalDataCountsQuery">
            <property name="type" value="sample"/>
        </include>
        UNION ALL
        <include refid="getClinicalDataCountsQuery">
            <property name="type" value="patient"/>
        </include>
    </select>

    <sql id="getClinicalDataCountsQuery">
        (
        WITH clinical_data_query AS (
        SELECT
        attribute_name AS attributeId,
        attribute_value AS value,
        cast(count(*) AS INTEGER) as count
        FROM clinical_data_derived
        <where>
            type='${type}'
            AND <!-- Table creation in clickhouse.sql has ensured no NA values but extra caution is always appreciated -->
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.normalizeAttributeValue">
                <property name="attribute_value" value="value"/>
            </include>
            != 'NA'
            AND
            <choose>
                <when test="'${type}' == 'sample'">
                    <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
                </when>
                <otherwise>
                    <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingPatientId"/>
                </otherwise>
            </choose>
            AND attribute_name IN
            <foreach item="attributeId" collection="attributeIds" open="(" separator="," close=")">
                #{attributeId}
            </foreach>
        </where>
        GROUP BY attribute_name, value ),
        clinical_data_sum AS (SELECT attributeId, sum(count) AS sum FROM clinical_data_query GROUP BY attributeId)

        SELECT * FROM clinical_data_query
        UNION ALL
        SELECT attributeId,
        'NA' AS value,
        ((
        <choose>
            <when test="'${type}' == 'sample'">
                <include
                        refid="org.cbioportal.infrastructure.repository.clickhouse.sample.ClickhouseSampleMapper.getFilteredSampleCount"/>
            </when>
            <otherwise>
                <include
                        refid="org.cbioportal.infrastructure.repository.clickhouse.patient.ClickhousePatientMapper.getFilteredPatientCount"/>
            </otherwise>
        </choose>
        ) - clinical_data_sum.sum) AS count
        FROM clinical_data_sum
        <where>
            count > 0
        </where>
        )
    </sql>


    <resultMap id="ClinicalDataCountItemResultMap" type="org.cbioportal.legacy.model.ClinicalDataCountItem">
        <result property="attributeId" column="attributeId"/>
        <collection property="counts" ofType="org.cbioportal.legacy.model.ClinicalDataCount">
            <result property="attributeId" column="attributeId"/>
            <result property="value" column="value"/>
            <result property="count" column="count"/>
        </collection>
    </resultMap>
</mapper>