<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
        namespace="org.cbioportal.infrastructure.repository.clickhouse.sample.ClickhouseSampleMapper">
    <select id="getFilteredSamples" resultMap="SampleResultMap">
        SELECT
        internal_id as internalId,
        patient_stable_id as patientStableId,
        sample_stable_id as stableId,
        cancer_study_identifier as cancerStudyIdentifier
        FROM sample_derived
        <where>
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
        </where>
        ORDER BY sample_stable_id ASC
    </select>


    <resultMap id="SampleResultMap"
               type="org.cbioportal.domain.sample.Sample">
        <constructor>
            <idArg name="internalId" column="internalId" javaType="int" />
            <arg name="stableId" column="stableId" javaType="String" />
            <arg name="patientStableId" column="patientStableId" javaType="String" />
            <arg name="cancerStudyIdentifier" column="cancerStudyIdentifier" javaType="String" />
        </constructor>
    </resultMap>
    
    <resultMap id="SummarySampleResultMap"
               type="org.cbioportal.domain.sample.Sample">
        <constructor>
            <idArg name="internalId" column="internalId" javaType="int" />
            <arg name="stableId" column="stableId" javaType="String" />
            <arg name="patientStableId" column="patientStableId" javaType="String" />
            <arg name="cancerStudyIdentifier" column="cancerStudyIdentifier" javaType="String" />
            <arg name="uniqueSampleKey" column="uniqueSampleKey" javaType="String" />
            <arg name="uniquePatientKey" column="uniquePatientKey" javaType="String" />
            <arg name="sampleType" column="sampleType" javaType="String" />
            <arg name="patientId" column="patientId" javaType="int" />
        </constructor>
    </resultMap>

    <resultMap id="DetailedSampleResultMap"
               type="org.cbioportal.domain.sample.Sample">
        <constructor>
            <idArg name="internalId" column="internalId" javaType="int" />
            <arg name="stableId" column="stableId" javaType="String" />
            <arg name="patientStableId" column="patientStableId" javaType="String" />
            <arg name="cancerStudyIdentifier" column="cancerStudyIdentifier" javaType="String" />
            <arg name="uniqueSampleKey" column="uniqueSampleKey" javaType="String" />
            <arg name="uniquePatientKey" column="uniquePatientKey" javaType="String" />
            <arg name="sampleType" column="sampleType" javaType="String" />
            <arg name="patientId" column="patientId" javaType="int" />
            <arg name="sequenced" column="sequenced" javaType="boolean" />
            <arg name="copyNumberSegmentPresent" column="copyNumberSegmentPresent" javaType="boolean" />
            <arg name="patient" resultMap="PatientResultMap" javaType="org.cbioportal.domain.patient.Patient" />
        </constructor>
    </resultMap>
    
    <resultMap id="PatientResultMap"
               type="org.cbioportal.domain.patient.Patient">
        <constructor>
            <idArg name="internalId" column="patient.internalId" javaType="int" />
            <arg name="stableId" column="patient.stableId" javaType="String" />
            <arg name="cancerStudyId" column="patient.cancerStudyId" javaType="int" />
            <arg name="cancerStudyIdentifier" column="patient.cancerStudyIdentifier" javaType="String" />
            <arg name="cancerStudy" resultMap="CancerStudyResultMap" javaType="org.cbioportal.domain.cancerstudy.CancerStudyMetadata" />
        </constructor>
    </resultMap>
    
    <resultMap id="CancerStudyResultMap" 
               type="org.cbioportal.domain.cancerstudy.CancerStudyMetadata">
        <constructor>
            <idArg name="cancerStudyId" column="patient.cancerStudy.cancerStudyId" javaType="int" />
            <arg name="cancerStudyIdentifier" column="patient.cancerStudy.cancerStudyIdentifier" javaType="String" />
            <arg name="typeOfCancerId" column="patient.cancerStudy.typeOfCancerId" javaType="String" />
            <arg name="name" column="patient.cancerStudy.name" javaType="String" />
            <arg name="description" column="patient.cancerStudy.description" javaType="String" />
            <arg name="publicStudy" column="patient.cancerStudy.publicStudy" javaType="boolean" />
            <arg name="pmid" column="patient.cancerStudy.pmid" javaType="String" />
            <arg name="citation" column="patient.cancerStudy.citation" javaType="String" />
            <arg name="groups" column="patient.cancerStudy.groups" javaType="String" />
            <arg name="status" column="patient.cancerStudy.status" javaType="int" />
            <arg name="importDate" column="patient.cancerStudy.importDate" javaType="java.util.Date" />
            <arg name="referenceGenome" column="patient.cancerStudy.referenceGenome" javaType="String" />
        </constructor>
    </resultMap>

    <select id="getSampleCount">
        <include refid="getFilteredSampleCount"></include>
    </select>

    <sql id="getFilteredSampleCount">
        SELECT count(distinct sample_unique_id) as count
        FROM sample_derived
        <where>
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
        </where>
    </sql>

    <select id="getSamples" resultMap="SampleResultMap">
        <include refid="selectSample" />
        <include refid="filterByCaseAndStudy" />
        <include refid="sortAndLimit">
            <property name="projection" value="ID"/>
        </include>
    </select>

    <select id="getSummarySamples" resultMap="SummarySampleResultMap">
        <include refid="selectSummarySample" />
        <include refid="filterByCaseAndStudy" />
        <include refid="sortAndLimit">
            <property name="projection" value="SUMMARY"/>
        </include>
    </select>
    
    <select id="getDetailedSamples" resultMap="DetailedSampleResultMap">
        <include refid="selectDetailedSample" />
        <include refid="filterByCaseAndStudy" />
        <include refid="sortAndLimit">
            <property name="projection" value="DETAILED"/>
        </include>
    </select>

    <select id="getSamplesBySampleListIds" resultMap="SampleResultMap">
        <include refid="selectSample" />
        <include refid="filterBySampleListId" />
    </select>

    <select id="getSummarySamplesBySampleListIds" resultMap="SummarySampleResultMap">
        <include refid="selectSummarySample" />
        <include refid="filterBySampleListId" />
    </select>

    <select id="getDetailedSamplesBySampleListIds" resultMap="DetailedSampleResultMap">
        <include refid="selectDetailedSample" />
        <include refid="filterBySampleListId" />
    </select>

    <select id="getMetaSamples" resultType="org.cbioportal.legacy.model.meta.BaseMeta">
        <include refid="selectMetaSample" />
        <include refid="filterByCaseAndStudy"/>
    </select>

    <select id="getMetaSamplesBySampleListIds" resultType="org.cbioportal.legacy.model.meta.BaseMeta">
        <include refid="selectMetaSample" />
        <include refid="filterBySampleListId" />
    </select>

    <select id="getSample" resultMap="DetailedSampleResultMap">
        <include refid="selectDetailedSample" />
        <include refid="filterBySampleAndStudyId" />
    </select>
    
    <sql id="sampleColumnsId">
        internal_id as internalId,
        sample_stable_id as stableId,
        patient_stable_id as patientStableId,
        cancer_study_identifier as cancerStudyIdentifier,
        sample_unique_id_base64 as uniqueSampleKey,
        patient_unique_id_base64 as uniquePatientKey
    </sql>
    
    <sql id="sampleColumnsSummary">
        <include refid="sampleColumnsId" />,
        sample_type as sampleType,
        patient_internal_id as patientId
    </sql>

    <sql id="sampleColumnsDetailed">
        <include refid="sampleColumnsSummary" />,
        sequenced as sequenced,
        copy_number_segment_present as copyNumberSegmentPresent,
        patient_internal_id as "patient.internalId",
        patient_stable_id as "patient.stableId",
        cancer_study_id as "patient.cancerStudyId",
        cancer_study_identifier as "patient.cancerStudyIdentifier",
        cancer_study_id as "patient.cancerStudy.cancerStudyId",
        cancer_study_identifier as "patient.cancerStudy.cancerStudyIdentifier",
        type_of_cancer_id as "patient.cancerStudy.typeOfCancerId",
        cancer_study_name as "patient.cancerStudy.name",
        cancer_study_description as "patient.cancerStudy.description",
        cancer_study_public as "patient.cancerStudy.publicStudy",
        cancer_study_pmid as "patient.cancerStudy.pmid",
        cancer_study_citation as "patient.cancerStudy.citation",
        cancer_study_groups as "patient.cancerStudy.groups",
        cancer_study_status as "patient.cancerStudy.status",
        cancer_study_import_date as "patient.cancerStudy.importDate",
        reference_genome as "patient.cancerStudy.referenceGenome"
    </sql>
    
    <sql id="selectSample">
        SELECT
            <include refid="sampleColumnsId" />
        FROM sample_derived
    </sql>
    
    <sql id="selectSummarySample">
        SELECT
            <include refid="sampleColumnsSummary" />
        FROM sample_derived
    </sql>

    <sql id="selectDetailedSample">
        SELECT
            <include refid="sampleColumnsDetailed" />
        FROM sample_derived
    </sql>

    <sql id="selectMetaSample">
        SELECT
            COUNT(*) as totalCount
        FROM sample_derived
    </sql>

    <sql id="filterByCaseAndStudy">
        <where>
            <if test="sampleIds == null and studyIds != null">
                cancer_study_identifier IN
                <if test="studyIds.isEmpty()">
                    (NULL)
                </if>
                <if test="!studyIds.isEmpty()">
                    <foreach item="item" collection="studyIds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            </if>
            <if test="sampleIds != null">
                <if test="@java.util.Arrays@stream(studyIds.toArray()).distinct().count() == 1">
                    cancer_study_identifier = #{studyIds[0]} AND
                    sample_stable_id IN
                    <foreach item="item" collection="sampleIds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="@java.util.Arrays@stream(studyIds.toArray()).distinct().count() > 1">
                    (cancer_study_identifier, sample_stable_id) IN
                    <foreach index="i" collection="sampleIds" open="(" separator="," close=")">
                        (#{studyIds[${i}]}, #{sampleIds[${i}]})
                    </foreach>
                </if>
            </if>
            <if test="patientId != null">
                AND patient_stable_id = #{patientId}
            </if>
            <if test="keyword != null">
                AND
                <foreach item="item" collection="keyword.trim().split(' ')" open="(" separator=") AND (" close=")">
                    sample_stable_id ILIKE concat('%', #{item}, '%')
                </foreach>
            </if>
        </where>
    </sql>

    <sql id="filterBySampleAndStudyId">
        WHERE sample_stable_id = #{sampleId} AND cancer_study_identifier = #{studyId}
    </sql>
    
    <sql id="filterBySampleListId">
        WHERE internal_id IN
        (
        SELECT
        sample_list_list.sample_id
        FROM sample_list_list
        INNER JOIN
        sample_list ON sample_list_list.list_id = sample_list.list_id
        WHERE
        sample_list.stable_id IN
        <foreach item="item" collection="sampleListIds" open="(" separator="," close=")">
            #{item}
        </foreach>
        )
    </sql>

    <sql id="sortAndLimit">
        <if test="sortBy != null and '${projection}' != 'ID'">
            ORDER BY "${sortBy}" ${direction}
        </if>
        <if test="'${projection}' == 'ID' and keyword == null">
            ORDER BY sample_stable_id ASC
        </if>
        <if test="keyword != null">
            ORDER BY if(sample_stable_id ILIKE concat(#{keyword}, '%'), 0, 1), sample_stable_id
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </sql>
</mapper>