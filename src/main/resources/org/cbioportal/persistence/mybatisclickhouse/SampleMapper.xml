<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.legacy.persistence.mybatisclickhouse.SampleDerivedMapper">
    <select id="getSamples" resultType="org.cbioportal.legacy.model.Sample">
        <include refid="selectSample" />
        <include refid="filterByCaseAndStudy" />
        <include refid="sortAndLimit" />
    </select>
    
    <select id="getSamplesBySampleListIds" resultType="org.cbioportal.legacy.model.Sample">
        <include refid="selectSample" />
        <include refid="filterBySampleListId" />
    </select>
    
    <select id="getMetaSamples" resultType="org.cbioportal.legacy.model.meta.BaseMeta">
        <include refid="selectMetaSample" />
        <include refid="filterByCaseAndStudy"/>
    </select>
    
    <select id="getMetaSamplesBySampleListIds" resultType="org.cbioportal.legacy.model.meta.BaseMeta">
        <include refid="selectMetaSample" />
        <include refid="filterBySampleListId" />
    </select>

    <select id="getSample" resultType="org.cbioportal.legacy.model.Sample">
        <include refid="selectSample" />
        WHERE sample_stable_id = #{sampleId} AND cancer_study_identifier = #{studyId}
    </select>
    
    <sql id="selectSample">
        SELECT
            internal_id as internalId,
            patient_stable_id as patientStableId,
            sample_stable_id as stableId,
            cancer_study_identifier as cancerStudyIdentifier,
            sample_unique_id_base64 as uniqueSampleKey,
            patient_unique_id_base64 as uniquePatientKey
            <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
                ,
                sample_type as sampleType,
                patient_internal_id as patientId
            </if>
            <if test="projection == 'DETAILED'">
                ,
                sequenced as sequenced,
                copy_number_segment_present as copyNumberSegmentPresent,
                patient_internal_id as "patient.internalId",
                patient_stable_id as "patient.stableId",
                cancer_study_id as "patient.cancerStudyId",
                cancer_study_identifier as "patient.cancerStudyIdentifier",
                cancer_study_id as "patient.cancerStudy.cancerStudyId",
                cancer_study_identifier as "patient.cancerStudy.cancerStudyIdentifier",
                type_of_cancer_id as "patient.cancerStudy.typeOfCancerId",
                cancer_study_name as "patient.cancerStudy.name",
                cancer_study_description as "patient.cancerStudy.description",
                cancer_study_public as "patient.cancerStudy.publicStudy",
                cancer_study_pmid as "patient.cancerStudy.pmid",
                cancer_study_citation as "patient.cancerStudy.citation",
                cancer_study_groups as "patient.cancerStudy.groups",
                cancer_study_status as "patient.cancerStudy.status",
                cancer_study_import_date as "patient.cancerStudy.importDate",
                reference_genome as "patient.cancerStudy.referenceGenome"
            </if>
        FROM sample_derived
    </sql>

    <sql id="selectMetaSample">
        SELECT
            COUNT(*) as totalCount
        FROM sample_derived
    </sql>
    
    <sql id="filterByCaseAndStudy">
        <where>
            <if test="sampleIds == null and studyIds != null">
                cancer_study_identifier IN
                <if test="studyIds.isEmpty()">
                    (NULL)
                </if>
                <if test="!studyIds.isEmpty()">
                    <foreach item="item" collection="studyIds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            </if>
            <if test="sampleIds != null">
                <if test="@java.util.Arrays@stream(studyIds.toArray()).distinct().count() == 1">
                    cancer_study_identifier = #{studyIds[0]} AND
                    sample_stable_id IN
                    <foreach item="item" collection="sampleIds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="@java.util.Arrays@stream(studyIds.toArray()).distinct().count() > 1">
                    (cancer_study_identifier, sample_stable_id) IN
                    <foreach index="i" collection="sampleIds" open="(" separator="," close=")">
                        (#{studyIds[${i}]}, #{sampleIds[${i}]})
                    </foreach>
                </if>
            </if>
            <if test="patientId != null">
                AND patient_stable_id = #{patientId}
            </if>
            <if test="keyword != null">
                AND
                <foreach item="item" collection="keyword.trim().split(' ')" open="(" separator=") AND (" close=")">
                    sample_stable_id ILIKE concat('%', #{item}, '%')
                </foreach>
            </if>
        </where>
    </sql>
    
    <sql id="filterBySampleListId">
        WHERE internal_id IN
        (
            SELECT
                sample_list_list.sample_id 
            FROM sample_list_list
            INNER JOIN 
                sample_list ON sample_list_list.list_id = sample_list.list_id
            WHERE 
                sample_list.stable_id IN
                <foreach item="item" collection="sampleListIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
        )
    </sql>
    
    <sql id="sortAndLimit">
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY "${sortBy}" ${direction}
        </if>
        <if test="projection == 'ID' and keyword == null">
            ORDER BY sample_stable_id ASC
        </if>
        <if test="keyword != null">
            ORDER BY if(sample_stable_id ILIKE concat(#{keyword}, '%'), 0, 1), sample_stable_id
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </sql>
</mapper>
