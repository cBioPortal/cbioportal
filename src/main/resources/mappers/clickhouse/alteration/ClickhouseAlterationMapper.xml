<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
        namespace="org.cbioportal.infrastructure.repository.clickhouse.alteration.ClickhouseAlterationMapper">


    <!-- /mutated-genes/fetch (returns AlterationCountByGene) -->
    <select id="getMutatedGenes" resultType="org.cbioportal.legacy.model.AlterationCountByGene">
        SELECT
        hugo_gene_symbol as hugoGeneSymbol,
        entrez_gene_id as entrezGeneId,
        COUNT(DISTINCT sample_unique_id) as numberOfAlteredCases,
        COUNT(*) as totalCount
        FROM genomic_event_derived
        <where>
            variant_type = 'mutation' AND
            <!-- Mutation Status UnCalled is only used in Patient View to see how many supporting reads a variant might have in a sample -->
            mutation_status != 'UNCALLED' AND
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
            <if test="alterationFilterHelper.shouldApplyMutationAlterationFilter()">
                <include refid="mutationAlterationFilter"/>
            </if>
        </where>
        GROUP BY entrez_gene_id, hugo_gene_symbol
    </select>

    <!-- /cna-genes/fetch (returns CopyNumberCountByGene) -->
    <select id="getCnaGenes" resultType="org.cbioportal.legacy.model.CopyNumberCountByGene">
        SELECT
        hugo_gene_symbol as hugoGeneSymbol,
        entrez_gene_id as entrezGeneId,
        cna_alteration as alteration,
        cna_cytoband as cytoband,
        COUNT(DISTINCT sample_unique_id) as numberOfAlteredCases,
        COUNT(*) as totalCount
        FROM genomic_event_derived
        <where>
            variant_type = 'cna' AND
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
            <if test="alterationFilterHelper.shouldApplyCnaAlterationFilter()">
                <include refid="cnaAlterationFilter"/>
            </if>
        </where>
        GROUP BY entrez_gene_id, hugo_gene_symbol, alteration, cytoband
    </select>

    <select id="getStructuralVariantGenes" resultType="org.cbioportal.legacy.model.AlterationCountByGene">
        SELECT
        hugo_gene_symbol as hugoGeneSymbol,
        entrez_gene_id as entrezGeneId,
        COUNT(DISTINCT sample_unique_id) as numberOfAlteredCases,
        COUNT(*) as totalCount
        FROM genomic_event_derived
        <where>
            variant_type = 'structural_variant' AND
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
        </where>
        GROUP BY entrez_gene_id, hugo_gene_symbol
    </select>

    <!-- Grab Total Profiled Counts. Currently, this query filters out all samples associated with a Gene Panel WES before
doing a join on gene_panel_to_gene_derived table. This is to prevent unnecessary stress on the db. For every sample
associated with a gene panel WES we multiply that row by the number of genes in the gene table. This could be greater
than 20K genes. This can create a huge join table that can slow down CH tremendously.
We compute the WES counts by using the query getSampleProfileCountWithoutPanelData and adding this value to the
totalProfiled Count per gene in java.
 -->
    <select id="getTotalProfiledCounts" resultType="org.cbioportal.legacy.model.AlterationCountByGene">
        SELECT
        gene as hugoGeneSymbol,
        COUNT(*) as numberOfProfiledCases
        FROM sample_to_gene_panel_derived stgp
        INNER JOIN gene_panel_to_gene_derived gptg on stgp.gene_panel_id = gptg.gene_panel_id
        <where>
            stgp.alteration_type = #{alterationType}
            AND stgp.gene_panel_id != 'WES'
            <if test="molecularProfiles != null and !molecularProfiles.isEmpty()">
                AND stgp.genetic_profile_id IN
                <foreach item="molecularProfile" collection="molecularProfiles" open="(" separator="," close=")">
                    #{molecularProfile.stableId}
                </foreach>
            </if>
            AND
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
        </where>
        GROUP BY gptg.gene
    </select>

    <!-- Helper query to get counts for totalProfiledCount when no genePanel data is available.
When no genePanel data is available we assume the whole genome was sequenced AKA WES (Whole Exome Sequencing). If this
is the case we use the current sample count from the cohort as the totalProfiledCount -->
    <select id="getTotalProfiledCountByAlterationType" resultType="int">
        SELECT
        COUNT(DISTINCT sample_unique_id)
        FROM sample_to_gene_panel_derived stgp
        <where>
            stgp.alteration_type = #{alterationType}
            AND
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
        </where>
    </select>

    <!-- Get Matching Gene Panel Ids for all Samples after study view filter -->
    <select id="getMatchingGenePanelIds" resultType="org.cbioportal.legacy.model.GenePanelToGene">
        SELECT
        gene as hugoGeneSymbol,
        gene_panel_id as genePanelId
        FROM gene_panel_to_gene_derived
        <where>
            gene_panel_id in (
            select distinct gene_panel_id
            from sample_to_gene_panel_derived
            <where>
                alteration_type = #{alterationType}
                AND
                <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
            </where>
            )
        </where>
        GROUP BY gene, gene_panel_id
    </select>

    <select id="getSampleProfileCountWithoutPanelData" resultType="int">
        SELECT COUNT(DISTINCT sample_unique_id)
        FROM sample_to_gene_panel_derived
        <where>
            alteration_type = #{alterationType} AND gene_panel_id = 'WES'
            AND
            <include refid="org.cbioportal.infrastructure.repository.clickhouse.studyview.ClickhouseStudyViewFilterMapper.applyStudyViewFilterUsingSampleId"/>
        </where>
    </select>

    <select id="getAlterationCountByGeneGivenSamplesAndMolecularProfiles"
            resultType="org.cbioportal.legacy.model.AlterationCountByGene">
        (WITH profiled_count_by_genes AS (
            SELECT gptg.gene as hugoGeneSymbol,
                COUNT(DISTINCT stgp.sample_unique_id) as profiled_count
            FROM sample_to_gene_panel_derived stgp
                INNER JOIN gene_panel_to_gene_derived gptg on stgp.gene_panel_id = gptg.gene_panel_id
            <where>
                stgp.gene_panel_id != 'WES'
                <if test="molecularProfiles != null ">
                    AND stgp.genetic_profile_id IN (#{molecularProfiles,typeHandler=org.apache.ibatis.type.ArrayTypeHandler})
                </if>
                <if test="samples != null ">
                    AND stgp.sample_unique_id IN (#{samples,typeHandler=org.apache.ibatis.type.ArrayTypeHandler})
                </if>
            </where>
            GROUP BY gptg.gene),
        total_count_by_genes AS (
            SELECT ged.hugo_gene_symbol AS hugoGeneSymbol,
            ged.entrez_gene_id as entrezGeneId,
            COUNT(DISTINCT sample_unique_id) as numberOfAlteredCases --Should be AlteratedCount
            FROM genomic_event_derived ged
            <where>
                ged.mutation_status != 'UNCALLED'
                <if test="molecularProfiles != null ">
                    AND ged.genetic_profile_stable_id IN (#{molecularProfiles,typeHandler=org.apache.ibatis.type.ArrayTypeHandler})
                </if>
                <if test="samples != null">
                    AND ged.sample_unique_id IN (#{samples,typeHandler=org.apache.ibatis.type.ArrayTypeHandler})
                </if>
            </where>
            GROUP BY ged.entrez_gene_id, ged.hugo_gene_symbol
        )

        SELECT
            pgb.hugoGeneSymbol AS hugoGeneSymbol,
            ifNull(tcg.entrezGeneId, 0) AS entrezGeneId,
            tcg.numberOfAlteredCases AS numberOfAlteredCases,
            pgb.profiled_count as numberOfProfiledCases
        FROM total_count_by_genes tcg
            RIGHT JOIN profiled_count_by_genes pgb ON tcg.hugoGeneSymbol = pgb.hugoGeneSymbol
        )
    </select>

    <select id="getAllMolecularProfiles" resultType="org.cbioportal.legacy.model.MolecularProfile">
        SELECT
        genetic_profile.genetic_profile_id as "molecularprofileid",
        genetic_profile.stable_id as "stableid",
        genetic_profile.cancer_study_id as "cancerstudyid",
        cancer_study.cancer_study_identifier as "cancerstudyidentifier",
        genetic_profile.genetic_alteration_type as "molecularalterationtype",
        genetic_profile.datatype as "datatype",
        genetic_profile.name as "name",
        genetic_profile.description as "description",
        genetic_profile.show_profile_in_analysis_tab as "showprofileinanalysistab",
        genetic_profile.pivot_threshold as "pivotthreshold",
        genetic_profile.sort_order as "sortorder",
        genetic_profile.generic_assay_type as "genericassaytype",
        genetic_profile.patient_level as "patientlevel",
        cancer_study.cancer_study_id as "cancerStudy.cancerstudyid",
        cancer_study.cancer_study_identifier as "cancerstudy.cancerstudyidentifier",
        cancer_study.type_of_cancer_id as "cancerStudy.typeofcancerid",
        cancer_study.name as "cancerStudy.name",
        cancer_study.description as "cancerStudy.description",
        cancer_study.public as "cancerStudy.publicstudy",
        cancer_study.pmid as "cancerStudy.pmid",
        cancer_study.citation as "cancerStudy.citation",
        cancer_study.groups as "cancerStudy.groups",
        cancer_study.status as "cancerStudy.status",
        cancer_study.import_date as "cancerStudy.importdate",
        reference_genome.name as "cancerStudy.referencegenome"

        FROM genetic_profile
        INNER JOIN cancer_study ON genetic_profile.cancer_study_id = cancer_study.cancer_study_id
        INNER JOIN reference_genome ON cancer_study.reference_genome_id = reference_genome.reference_genome_id
    </select>

</mapper>