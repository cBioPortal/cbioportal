<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.mskcc.cbio.portal.persistence.ProfileDataMapper">

<select id="getGeneticAlterationRow" resultType="DBGeneticAltRow">
    select
        gene.HUGO_GENE_SYMBOL as hugo_gene_symbol,
        gene.ENTREZ_GENE_ID as entrez_gene_id,
        genetic_profile.STABLE_ID as genetic_profile_id,
        genetic_alteration.VALUES as `values`,
        cancer_study.CANCER_STUDY_IDENTIFIER as study_id
    from genetic_alteration inner join gene on genetic_alteration.GENETIC_ENTITY_ID = gene.GENETIC_ENTITY_ID
                            inner join genetic_profile on genetic_profile.GENETIC_PROFILE_ID = genetic_alteration.GENETIC_PROFILE_ID
                            inner join cancer_study on genetic_profile.CANCER_STUDY_ID=cancer_study.CANCER_STUDY_ID
    where genetic_profile.STABLE_ID in <foreach item="item" collection="genetic_profile_ids" open="(" separator="," close=")">#{item}</foreach> and
        gene.HUGO_GENE_SYMBOL in <foreach item="item" collection="genes" open="(" separator="," close=")">#{item}</foreach>
</select>

<select id="getProfileCaseLists" resultType="DBProfileDataCaseList">
    select
        genetic_profile.STABLE_ID as genetic_profile_id,
        genetic_profile_samples.ORDERED_SAMPLE_LIST as ordered_sample_list
    from genetic_profile_samples inner join genetic_profile on genetic_profile.GENETIC_PROFILE_ID=genetic_profile_samples.GENETIC_PROFILE_ID
    where genetic_profile.STABLE_ID in
    <foreach item="item" collection="genetic_profile_ids" open="(" separator="," close=")">
        #{item}
    </foreach>
</select>

<select id="getMutationData" resultType="DBMutationData">
    select
        gene.HUGO_GENE_SYMBOL as hugo_gene_symbol,
        gene.ENTREZ_GENE_ID as entrez_gene_id,
        sample.STABLE_ID as sample_id,
        cancer_study.CANCER_STUDY_IDENTIFIER as study_id,
        genetic_profile.STABLE_ID as genetic_profile_id,
        mutation.CENTER as sequencing_center,
        mutation.MUTATION_STATUS as mutation_status,
        mutation_event.MUTATION_TYPE as mutation_type,
        mutation.VALIDATION_STATUS as validation_status,
        mutation_event.PROTEIN_CHANGE as amino_acid_change,
        mutation_event.FUNCTIONAL_IMPACT_SCORE as functional_impact_score,
        mutation_event.LINK_XVAR as xvar_link,
        mutation_event.LINK_PDB as xvar_link_pdb,
        mutation_event.LINK_MSA as xvar_link_msa,
        mutation_event.CHR as chr,
        mutation_event.START_POSITION as start_position,
        mutation_event.END_POSITION as end_position,
        mutation_event.ONCOTATOR_PROTEIN_POS_START as protein_start_position,
        mutation_event.ONCOTATOR_PROTEIN_POS_END as protein_end_position,
        mutation_event.REFERENCE_ALLELE as reference_allele,
        mutation_event.TUMOR_SEQ_ALLELE as variant_allele,
        mutation.TUMOR_REF_COUNT as reference_read_count_tumor,
        mutation.NORMAL_REF_COUNT as reference_read_count_normal,
        mutation.TUMOR_ALT_COUNT as variant_read_count_tumor,
        mutation.NORMAL_ALT_COUNT as variant_read_count_normal,
        mutation_event.KEYWORD as keyword,
        mutation.DRIVER_FILTER as driver_filter,
        mutation.DRIVER_FILTER_ANNOTATION as driver_filter_annotation,
        mutation.DRIVER_TIERS_FILTER as driver_tiers_filter,
        mutation.DRIVER_TIERS_FILTER_ANNOTATION as driver_tiers_filter_annotation
    from mutation inner join mutation_event on mutation.MUTATION_EVENT_ID = mutation_event.MUTATION_EVENT_ID
                            inner join sample on mutation.SAMPLE_ID=sample.INTERNAL_ID
                            inner join gene on mutation.ENTREZ_GENE_ID=gene.ENTREZ_GENE_ID
                            inner join genetic_profile on genetic_profile.GENETIC_PROFILE_ID=mutation.GENETIC_PROFILE_ID
                            inner join cancer_study on genetic_profile.CANCER_STUDY_ID=cancer_study.CANCER_STUDY_ID
    where genetic_profile.STABLE_ID in
    <foreach item="item" collection="mutation_profile_ids" open="(" separator="," close=")">
        #{item}
    </foreach>
    <if test="genes != null and !genes.isEmpty()">
        and gene.HUGO_GENE_SYMBOL in
        <foreach item="item" collection="genes" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
</select>
<select id="getMutationDataBySample" resultType="DBMutationData">
    select
        gene.HUGO_GENE_SYMBOL as hugo_gene_symbol,
        gene.ENTREZ_GENE_ID as entrez_gene_id,
        sample.STABLE_ID as sample_id,
        cancer_study.CANCER_STUDY_IDENTIFIER as study_id,
        genetic_profile.STABLE_ID as genetic_profile_id,
        mutation.CENTER as sequencing_center,
        mutation.MUTATION_STATUS as mutation_status,
        mutation_event.MUTATION_TYPE as mutation_type,
        mutation.VALIDATION_STATUS as validation_status,
        mutation_event.PROTEIN_CHANGE as amino_acid_change,
        mutation_event.FUNCTIONAL_IMPACT_SCORE as functional_impact_score,
        mutation_event.LINK_XVAR as xvar_link,
        mutation_event.LINK_PDB as xvar_link_pdb,
        mutation_event.LINK_MSA as xvar_link_msa,
        mutation_event.CHR as chr,
        mutation_event.START_POSITION as start_position,
        mutation_event.END_POSITION as end_position,
        mutation_event.ONCOTATOR_PROTEIN_POS_START as protein_start_position,
        mutation_event.ONCOTATOR_PROTEIN_POS_END as protein_end_position,
        mutation_event.REFERENCE_ALLELE as reference_allele,
        mutation_event.TUMOR_SEQ_ALLELE as variant_allele,
        mutation.TUMOR_REF_COUNT as reference_read_count_tumor,
        mutation.NORMAL_REF_COUNT as reference_read_count_normal,
        mutation.TUMOR_ALT_COUNT as variant_read_count_tumor,
        mutation.NORMAL_ALT_COUNT as variant_read_count_normal,
        mutation_event.KEYWORD as keyword,
        mutation.DRIVER_FILTER as driver_filter,
        mutation.DRIVER_FILTER_ANNOTATION as driver_filter_annotation,
        mutation.DRIVER_TIERS_FILTER as driver_tiers_filter,
        mutation.DRIVER_TIERS_FILTER_ANNOTATION as driver_tiers_filter_annotation
    from mutation inner join mutation_event on mutation.MUTATION_EVENT_ID = mutation_event.MUTATION_EVENT_ID
                            inner join sample on mutation.SAMPLE_ID=sample.INTERNAL_ID
                            inner join gene on mutation.ENTREZ_GENE_ID=gene.ENTREZ_GENE_ID
                            inner join genetic_profile on genetic_profile.GENETIC_PROFILE_ID=mutation.GENETIC_PROFILE_ID
                            inner join cancer_study on genetic_profile.CANCER_STUDY_ID=cancer_study.CANCER_STUDY_ID
    where genetic_profile.STABLE_ID in
    <foreach item="item" collection="mutation_profile_ids" open="(" separator="," close=")">
        #{item}
    </foreach>
    and gene.HUGO_GENE_SYMBOL in
    <foreach item="item" collection="genes" open="(" separator="," close=")">
        #{item}
    </foreach>
    and sample.STABLE_ID in
    <foreach item="item" collection="sample_ids" open="(" separator="," close=")">
        #{item}
    </foreach>
</select>

<select id="getMutationDataBySampleList" resultType="DBMutationData">
    select
        gene.HUGO_GENE_SYMBOL as hugo_gene_symbol,
        gene.ENTREZ_GENE_ID as entrez_gene_id,
        sample.STABLE_ID as sample_id,
        cancer_study.CANCER_STUDY_IDENTIFIER as study_id,
        genetic_profile.STABLE_ID as genetic_profile_id,
        mutation.CENTER as sequencing_center,
        mutation.MUTATION_STATUS as mutation_status,
        mutation_event.MUTATION_TYPE as mutation_type,
        mutation.VALIDATION_STATUS as validation_status,
        mutation_event.PROTEIN_CHANGE as amino_acid_change,
        mutation_event.FUNCTIONAL_IMPACT_SCORE as functional_impact_score,
        mutation_event.LINK_XVAR as xvar_link,
        mutation_event.LINK_PDB as xvar_link_pdb,
        mutation_event.LINK_MSA as xvar_link_msa,
        mutation_event.CHR as chr,
        mutation_event.START_POSITION as start_position,
        mutation_event.END_POSITION as end_position,
        mutation_event.ONCOTATOR_PROTEIN_POS_START as protein_start_position,
        mutation_event.ONCOTATOR_PROTEIN_POS_END as protein_end_position,
        mutation_event.REFERENCE_ALLELE as reference_allele,
        mutation_event.TUMOR_SEQ_ALLELE as variant_allele,
        mutation.TUMOR_REF_COUNT as reference_read_count_tumor,
        mutation.NORMAL_REF_COUNT as reference_read_count_normal,
        mutation.TUMOR_ALT_COUNT as variant_read_count_tumor,
        mutation.NORMAL_ALT_COUNT as variant_read_count_normal,
        sample_list.STABLE_ID as sample_list_id,
        mutation_event.KEYWORD as keyword,
        mutation.DRIVER_FILTER as driver_filter,
        mutation.DRIVER_FILTER_ANNOTATION as driver_filter_annotation,
        mutation.DRIVER_TIERS_FILTER as driver_tiers_filter,
        mutation.DRIVER_TIERS_FILTER_ANNOTATION as driver_tiers_filter_annotation
    from mutation inner join mutation_event on mutation.MUTATION_EVENT_ID = mutation_event.MUTATION_EVENT_ID
                            inner join sample on mutation.SAMPLE_ID=sample.INTERNAL_ID
                            inner join gene on mutation.ENTREZ_GENE_ID=gene.ENTREZ_GENE_ID
                            inner join genetic_profile on genetic_profile.GENETIC_PROFILE_ID=mutation.GENETIC_PROFILE_ID
                            inner join cancer_study on genetic_profile.CANCER_STUDY_ID=cancer_study.CANCER_STUDY_ID
                            inner join sample_list_list on sample_list_list.SAMPLE_ID=sample.INTERNAL_ID
                            inner join sample_list on sample_list.LIST_ID=sample_list_list.LIST_ID
    where genetic_profile.STABLE_ID in
    <foreach item="item" collection="mutation_profile_ids" open="(" separator="," close=")">
        #{item}
    </foreach>
    and gene.HUGO_GENE_SYMBOL in
    <foreach item="item" collection="genes" open="(" separator="," close=")">
        #{item}
    </foreach>
    and sample_list.STABLE_ID=#{sample_list_id}
</select>
    
</mapper>
