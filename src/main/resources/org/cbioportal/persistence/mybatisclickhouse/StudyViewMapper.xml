<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.persistence.mybatisclickhouse.StudyViewMapper">

    <!-- for /filtered-sample/fetch (returns Sample objects) -->
    <select id="getFilteredSamples" resultType="org.cbioportal.model.Sample">
        SELECT
            patient_stable_id as patientStableId,
            sample_stable_id as stableId,
            cancer_study_identifier as cancerStudyIdentifier,
            sample_unique_id_base64 as uniqueSampleKey,
            patient_unique_id_base64 as uniquePatientKey
        FROM sample_derived
        <where>
            sample_unique_id IN ( <include refid="sampleUniqueIdsFromStudyViewFilter"/>)
            
            <if test="applyPatientIdFilters == true">
                AND patient_unique_id IN (<include refid="patientUniqueIdsFromStudyViewFilter"/>)
            </if>
        </where>
        ORDER BY sample_stable_id ASC;
    </select>

    <!-- /mutated-genes/fetch (returns AlterationCountByGene) -->
    <select id="getMutatedGenes" resultType="org.cbioportal.model.AlterationCountByGene">
        SELECT
            hugo_gene_symbol as hugoGeneSymbol,
            1 as entrezGeneId,
            COUNT(DISTINCT sample_unique_id) as numberOfAlteredCases,
            COUNT(*) as totalCount
        FROM genomic_event_derived
        <where>
            variant_type = 'mutation' AND
            <include refid="applyStudyViewFilter"/>
            <if test="alterationFilterHelper.shouldApplyMutationAlterationFilter()">
                <include refid="mutationAlterationFilter"/>
            </if>
        </where>
        GROUP BY hugo_gene_symbol;
    </select>

    <!-- /cna-genes/fetch (returns CopyNumberCountByGene) -->
    <select id="getCnaGenes" resultType="org.cbioportal.model.CopyNumberCountByGene">
        SELECT
        hugo_gene_symbol as hugoGeneSymbol,
        1 as entrezGeneId,
        cna_alteration as alteration,
        cna_cytoband as cytoband,
        COUNT(DISTINCT sample_unique_id) as numberOfAlteredCases,
        COUNT(*) as totalCount
        FROM genomic_event_derived
        <where>
            variant_type = 'cna' AND
            <include refid="applyStudyViewFilter"/>
            <if test="alterationFilterHelper.shouldApplyCnaAlterationFilter()">
                <include refid="cnaAlterationFilter"/>
            </if>
        </where>
        GROUP BY hugo_gene_symbol, alteration, cytoband;
    </select>

    <select id="getStructuralVariantGenes" resultType="org.cbioportal.model.AlterationCountByGene">
        SELECT
        hugo_gene_symbol as hugoGeneSymbol,
        1 as entrezGeneId,
        COUNT(DISTINCT sample_unique_id) as numberOfAlteredCases,
        COUNT(*) as totalCount
        FROM genomic_event_derived
        <where>
            variant_type = 'structural_variant' AND
            <include refid="applyStudyViewFilter"/>
        </where>
        GROUP BY hugo_gene_symbol;
    </select>

    <!-- TODO only fetching from sample_clinical_attribute_numeric, need to support sample_clinical_attribute_categorical as well -->
    <select id="getSampleClinicalDataFromStudyViewFilter" resultType="org.cbioportal.model.ClinicalData">
        SELECT
            sample_unique_id as sampleId,
            patient_unique_id as patientId,
            attribute_name as attrId,
            attribute_value as attrValue,
            cancer_study_identifier as studyId
        FROM clinical_data_derived
        <where>
            type = 'sample' AND
            sample_unique_id IN (
            <include refid="sampleUniqueIdsFromStudyViewFilter"/>
            <if test="applyPatientIdFilters == true">
                INTERSECT <include refid="getSampleIdsFromPatientIds"/>
            </if>
            )
        </where>
        <if test="attributeIds != null and !attributeIds.isEmpty()">
            AND attribute_name IN
            <foreach item="attributeId" collection="attributeIds" open="(" separator="," close=")">
                #{attributeId}
            </foreach>
        </if>
    </select>
    
    <!-- TODO only fetching from patient_clinical_attribute_numeric, need to support patient_clinical_attribute_categorical as well -->
    <select id="getPatientClinicalDataFromStudyViewFilter" resultType="org.cbioportal.model.ClinicalData">
        SELECT
            patient_unique_id as patientId,
            attribute_name as attrId,
            attribute_value as attrValue,
            cancer_study_identifier as studyId
        FROM patient_clinical_attribute_numeric_mv
        <where> 
            patient_unique_id IN (
                <include refid="getPatientIdsFromSampleIdFilters"/>
                <if test="applyPatientIdFilters == true">
                    INTERSECT <include refid="patientUniqueIdsFromStudyViewFilter"/>
                </if>
            )
        </where>
        <if test="attributeIds != null and !attributeIds.isEmpty()">
            AND attribute_name IN
            <foreach item="attributeId" collection="attributeIds" open="(" separator="," close=")">
                #{attributeId}
            </foreach>
        </if>
    </select>
   
    <!-- for /clinical-data-counts/fetch (returns ClinicalData) which will then be converted to clinicalDataCountItems -->
    <select id="getClinicalDataCounts" resultType="org.cbioportal.model.ClinicalDataCount">
        <include refid="getCategoricalClinicalDataCountsQuerySample">
            <property name="table_name_prefix" value="sample"/>
        </include>
        UNION ALL
        <include refid="getCategoricalClinicalDataCountsQueryPatient">
            <property name="table_name_prefix" value="patient"/>
        </include>
    </select>


    <!-- for /molecular-profile-sample-counts/fetch (returns GenomicDataCount) which will then be converted to clinicalDataCountItems -->
    <select id="getGenomicDataCounts" resultType="org.cbioportal.model.GenomicDataCount">
            --we need to derive the alteration type from the stable_id by removing cancer study id
            --this should probaby be refactored at some point but we need to maintain api interface
            SELECT replaceOne(genetic_profile.stable_id, concat(sample_derived.cancer_study_identifier,'_'), '') AS value,
                genetic_profile.stable_id, 
                genetic_profile.name AS label, 
                count(sample_profile.genetic_profile_id) AS count FROM sample_profile 
            LEFT JOIN sample_derived ON sample_profile.sample_id=sample_derived.internal_id
            LEFT JOIN genetic_profile on sample_profile.genetic_profile_id = genetic_profile.genetic_profile_id
            <where>
            sample_unique_id IN ( <include refid="sampleUniqueIdsFromStudyViewFilter"/>)
        </where>
        GROUP BY genetic_profile.stable_id, genetic_profile.name, sample_derived.cancer_study_identifier;
    </select>
    

    <!-- for /sample-lists-counts/fetch (returns CaseListDataCount) -->
    <select id="getCaseListDataCounts" resultType="org.cbioportal.model.CaseListDataCount">
        SELECT
            name AS label,
            REPLACE(stable_id, CONCAT(cancer_study_identifier, '_'), '') AS value,
            count(sample_id) AS count
        FROM sample_list_list sll
            LEFT JOIN sample_mv s ON sll.sample_id=s.internal_id
            LEFT JOIN sample_list sl on sll.list_id=sl.list_id
        <where>
            sample_unique_id IN ( <include refid="sampleUniqueIdsFromStudyViewFilter"/>)
        </where>
        GROUP BY s.cancer_study_identifier, sl.stable_id, sl.name;
    </select>
    

    <sql id="getCategoricalClinicalDataCountsQuerySample">
        SELECT
        attribute_name as attributeId,
        if(attribute_value='', 'NA', attribute_value) AS value,
        count(value) as count
        FROM clinical_data_derived
        <where>
            type='sample' AND
            sample_unique_id IN (<include refid="sampleUniqueIdsFromStudyViewFilter"/>
            <if test="applyPatientIdFilters == true">
                INTERSECT
                SELECT sample_unique_id from sample_derived WHERE sample_derived.patient_unique_id IN
                (<include refid="patientUniqueIdsFromStudyViewFilter"/>)
            </if>
            )
            <if test="filteredAttributeValues != null and !filteredAttributeValues.isEmpty()">
                AND UPPER(value) NOT IN
                <foreach item="filteredAttributeValue" collection="filteredAttributeValues" open="(" separator="," close=")">
                    #{filteredAttributeValue}
                </foreach> 
            </if>
            AND attribute_name IN
            <foreach item="attributeId" collection="attributeIds" open="(" separator="," close=")">
                #{attributeId}
            </foreach>
        </where>
        GROUP BY attribute_name,
        value
    </sql>

    <sql id="getCategoricalClinicalDataCountsQueryPatient">
        SELECT
        attribute_name as attributeId,
        if(attribute_value='', 'NA', attribute_value) AS value,
        count(value) as count
        FROM clinical_data_derived
        <where>
            type='patient' AND
            patient_unique_id IN ( <include refid="getPatientIdsFromSampleIdFilters"/>
            <if test="applyPatientIdFilters == true">
                INTERSECT <include refid="patientUniqueIdsFromStudyViewFilter"/>
            </if>
            )
            <if test="filteredAttributeValues != null and !filteredAttributeValues.isEmpty()">
                AND UPPER(value) NOT IN
                <foreach item="filteredAttributeValue" collection="filteredAttributeValues" open="(" separator="," close=")">
                    #{filteredAttributeValue}
                </foreach>
            </if>
            AND attribute_name IN
            <foreach item="attributeId" collection="attributeIds" open="(" separator="," close=")">
                #{attributeId}
            </foreach>
        </where>
        GROUP BY attribute_name,
        value
    </sql>
    
    <sql id="getSampleIdsFromPatientIds">
        SELECT sample_unique_id
        FROM sample_derived
        <where>
            patient_unique_id IN (<include refid="patientUniqueIdsFromStudyViewFilter"/>) 
        </where>
    </sql>
    
    <sql id="getPatientIdsFromSampleIdFilters">
        SELECT patient_unique_id
        FROM sample_derived
        <where>
            sample_unique_id IN (<include refid="sampleUniqueIdsFromStudyViewFilter"/>)
        </where>
    </sql>
    
    <select id="getClinicalAttributes" resultType="org.cbioportal.model.ClinicalAttribute">
        SELECT
            attr_id as attrId,
            datatype as dataType,
            patient_attribute as patientAttribute,
            cs.cancer_study_identifier cancerStudyIdentifier
        FROM clinical_attribute_meta cam
        JOIN cancer_study cs on cs.cancer_study_id = cam.cancer_study_id
    </select>

    <!-- Grab Total Profiled Counts -->
    <select id="getTotalProfiledCounts">
        SELECT
        gene as hugoGeneSymbol,
        COUNT(*) as numberOfProfiledCases
        FROM sample_to_gene_panel_derived stgp
            INNER JOIN gene_panel_to_gene_derived gptg on stgp.gene_panel_id = gptg.gene_panel_id 
        <where>
            stgp.alteration_type = '${alterationType}' 
            AND
            sample_unique_id IN ( <include refid="sampleUniqueIdsFromStudyViewFilter"/>
            <if test="applyPatientIdFilters == true">
                INTERSECT <include refid="getSampleIdsFromPatientIds"/>
            </if>
            )
        </where>
        GROUP BY gptg.gene;
    </select>

    <!-- Helper query to get counts for totalProfiledCount when no genePanel data is available. 
    When no genePanel data is available we assume the whole genome was sequenced AKA WES (Whole Exome Sequencing). If this 
    is the case we use the current sample count from the cohort as the totalProfiledCount -->
    <select id="getTotalProfiledCountByAlterationType" resultType="int">
        SELECT
        COUNT(DISTINCT sample_unique_id)
        FROM sample_to_gene_panel_derived stgp
        <where>
            stgp.alteration_type = '${alterationType}'
            AND
            sample_unique_id IN ( <include refid="sampleUniqueIdsFromStudyViewFilter"/>
            <if test="applyPatientIdFilters == true">
                INTERSECT <include refid="getSampleIdsFromPatientIds"/>
            </if>
            )
        </where>
    </select>
    
    <!-- Helper query to get counts for FilteredSamples. -->
    <select id="getFilteredSamplesCount" resultType="int">
        SELECT
            COUNT(*)
        FROM sample_derived
        <where>
            <include refid="applyStudyViewFilter"/>
        </where>
    </select>
    
    <!-- Get Matching Gene Panel Ids for all Samples after study view filter -->
    <select id="getMatchingGenePanelIds" resultType="org.cbioportal.model.GenePanelToGene">
        SELECT
            gene as hugoGeneSymbol,
            gene_panel_id as genePanelId
        FROM gene_panel_to_gene_derived
        <where>
            gene_panel_id in (
                select distinct gene_panel_id
                from sample_to_gene_panel_derived
                <where>
                    alteration_type = '${alterationType}'
                    AND
                    sample_unique_id IN ( <include refid="sampleUniqueIdsFromStudyViewFilter"/>
                    <if test="applyPatientIdFilters == true">
                        INTERSECT <include refid="getSampleIdsFromPatientIds"/>
                    </if>
                    )
                </where>
            )
        </where>
        GROUP BY gene, gene_panel_id;
    </select>
    
    
    <sql id="applyStudyViewFilter">
        sample_unique_id IN ( <include refid="sampleUniqueIdsFromStudyViewFilter"/>)
        <if test="applyPatientIdFilters == true">
            AND patient_unique_id IN (<include refid="patientUniqueIdsFromStudyViewFilter"/>)
        </if> 
    </sql>
</mapper>
