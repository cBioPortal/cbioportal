<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.persistence.mybatis.ClinicalDataMapper">

    <sql id="selectSample">
        clinical_sample.INTERNAL_ID AS "${prefix}internalId",
        sample.STABLE_ID AS "${prefix}sampleId",
        patient.STABLE_ID AS "${prefix}patientId",
        clinical_sample.ATTR_ID AS "${prefix}attrId",
        cancer_study.CANCER_STUDY_IDENTIFIER AS "${prefix}studyId"
        <if test="_parameter.containsKey('projection')">
            <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
                , clinical_sample.ATTR_VALUE AS "${prefix}attrValue"
            </if>
            <if test="projection == 'DETAILED'">
                ,
                <include refid="org.cbioportal.persistence.mybatis.ClinicalAttributeMapper.select">
                    <property name="prefix" value="${prefix}clinicalAttribute."/>
                </include>
            </if>
        </if>
    </sql>

    <sql id="selectPatient">
        clinical_patient.INTERNAL_ID AS "${prefix}internalId",
        patient.STABLE_ID AS "${prefix}patientId",
        clinical_patient.ATTR_ID AS "${prefix}attrId",
        cancer_study.CANCER_STUDY_IDENTIFIER AS "${prefix}studyId"
        <if test="_parameter.containsKey('projection')">
            <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
                , clinical_patient.ATTR_VALUE AS "${prefix}attrValue"
            </if>
            <if test="projection == 'DETAILED'">
                ,
                <include refid="org.cbioportal.persistence.mybatis.ClinicalAttributeMapper.select">
                    <property name="prefix" value="${prefix}clinicalAttribute."/>
                </include>
            </if>
        </if>
    </sql>

    <sql id="fromSample">
        FROM clinical_sample
        INNER JOIN sample ON clinical_sample.INTERNAL_ID = sample.INTERNAL_ID
        INNER JOIN patient ON sample.PATIENT_ID = patient.INTERNAL_ID
        INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
    </sql>

    <sql id="fromPatient">
        FROM clinical_patient
        INNER JOIN patient ON clinical_patient.INTERNAL_ID = patient.INTERNAL_ID
        INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
    </sql>

    <sql id="whereSample">
        <where>
            <if test="sampleIds == null">
                cancer_study.CANCER_STUDY_IDENTIFIER = #{studyIds[0]}
            </if>
            <if test="sampleIds != null">
                <choose>
                    <when test="studyIds.stream().distinct().count() == 1">
                        cancer_study.CANCER_STUDY_IDENTIFIER = #{studyIds[0]} AND
                        sample.STABLE_ID IN
                        <foreach item="item" collection="sampleIds" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        (cancer_study.CANCER_STUDY_IDENTIFIER, sample.STABLE_ID) IN
                        <foreach index="i" collection="sampleIds" open="(" separator="," close=")">
                            (#{studyIds[${i}]}, #{sampleIds[${i}]})
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="_parameter.containsKey('attributeIds') and attributeIds != null">
                AND clinical_sample.ATTR_ID IN
                <foreach item="item" collection="attributeIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <sql id="wherePatient">
        <where>
            <if test="patientIds == null">
                cancer_study.CANCER_STUDY_IDENTIFIER = #{studyIds[0]}
            </if>
            <if test="patientIds != null">
                <choose>
                    <when test="studyIds.stream().distinct().count() == 1">
                        cancer_study.CANCER_STUDY_IDENTIFIER = #{studyIds[0]} AND
                        patient.STABLE_ID IN
                        <foreach item="item" collection="patientIds" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        (cancer_study.CANCER_STUDY_IDENTIFIER, patient.STABLE_ID) IN
                        <foreach index="i" collection="patientIds" open="(" separator="," close=")">
                            (#{studyIds[${i}]}, #{patientIds[${i}]})
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="_parameter.containsKey('attributeIds') and attributeIds != null">
                AND clinical_patient.ATTR_ID IN
                <foreach item="item" collection="attributeIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="getPatientClinicalDataBySampleInternalIds" resultType="org.cbioportal.model.ClinicalData">
        <!-- Always 'SUMMARY' projection. 'DETAILED' not implemented. -->
        SELECT sample.INTERNAL_ID internalId, sample.STABLE_ID sampleId, patient.STABLE_ID patientId, cancer_study.CANCER_STUDY_IDENTIFIER studyId, clinical_patient.ATTR_ID attrId, clinical_patient.ATTR_VALUE attrValue
            FROM clinical_patient
            INNER JOIN patient ON clinical_patient.INTERNAL_ID = patient.INTERNAL_ID
            INNER JOIN sample ON patient.INTERNAL_ID = sample.PATIENT_ID
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
            WHERE sample.INTERNAL_ID IN
            <foreach item="item" collection="sampleInternalIds" open="(" separator="," close=")">
                #{item}
            </foreach>
    </select>
    
    <select id="getSampleClinicalDataBySampleInternalIds" resultType="org.cbioportal.model.ClinicalData">
        <!-- Always 'SUMMARY' projection. 'DETAILED' not implemented. -->
        SELECT sample.INTERNAL_ID internalId, sample.STABLE_ID sampleId, patient.STABLE_ID patientId, cancer_study.CANCER_STUDY_IDENTIFIER studyId, clinical_sample.ATTR_ID attrId, clinical_sample.ATTR_VALUE attrValue
            FROM clinical_sample
            INNER JOIN sample ON clinical_sample.INTERNAL_ID = sample.INTERNAL_ID
            INNER JOIN patient ON sample.PATIENT_ID = patient.INTERNAL_ID
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
            WHERE sample.INTERNAL_ID IN
            <foreach item="item" collection="sampleInternalIds" open="(" separator="," close=")">
                #{item}
            </foreach>
    </select>

    <select id="getSampleClinicalData" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectSample">
            <property name="prefix" value=""/>
        </include>
        <include refid="fromSample"/>
        <if test="projection == 'DETAILED'">
            INNER JOIN clinical_attribute_meta ON clinical_sample.ATTR_ID = clinical_attribute_meta.ATTR_ID
            AND cancer_study.CANCER_STUDY_ID = clinical_attribute_meta.CANCER_STUDY_ID
            INNER JOIN type_of_cancer ON cancer_study.TYPE_OF_CANCER_ID = type_of_cancer.TYPE_OF_CANCER_ID
        </if>
        <include refid="whereSample"/>
        <if test="_parameter.containsKey('sortAttrId') and sortAttrId != null and projection != 'ID'">
            ORDER BY ${sortAttrId} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY clinical_sample.ATTR_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaSampleClinicalData" resultType="org.cbioportal.model.meta.BaseMeta">
        SELECT
        COUNT(*) AS "totalCount"
        <include refid="fromSample"/>
        <include refid="whereSample"/>
    </select>

    <select id="getPatientClinicalData" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectPatient">
            <property name="prefix" value=""/>
        </include>
        <include refid="fromPatient"/>
        <if test="projection == 'DETAILED'">
            INNER JOIN clinical_attribute_meta ON clinical_patient.ATTR_ID = clinical_attribute_meta.ATTR_ID
            AND cancer_study.CANCER_STUDY_ID = clinical_attribute_meta.CANCER_STUDY_ID
            INNER JOIN type_of_cancer ON cancer_study.TYPE_OF_CANCER_ID = type_of_cancer.TYPE_OF_CANCER_ID
        </if>
        <include refid="wherePatient"/>
        <if test="_parameter.containsKey('sortAttrId') and sortAttrId != null and projection != 'ID'">
            ORDER BY ${sortAttrId} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY clinical_patient.ATTR_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>
    
    <select id="getPatientClinicalDataDetailedToSample" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectPatient">
            <property name="prefix" value=""/>
        </include>
        , sample.STABLE_ID AS "sampleId"
        <include refid="fromPatient"/>
            INNER JOIN sample ON patient.INTERNAL_ID = sample.PATIENT_ID
        <if test="projection == 'DETAILED'">
            INNER JOIN clinical_attribute_meta ON clinical_patient.ATTR_ID = clinical_attribute_meta.ATTR_ID
            AND cancer_study.CANCER_STUDY_ID = clinical_attribute_meta.CANCER_STUDY_ID
            INNER JOIN type_of_cancer ON cancer_study.TYPE_OF_CANCER_ID = type_of_cancer.TYPE_OF_CANCER_ID
        </if>
        <include refid="wherePatient"/>
        <if test="_parameter.containsKey('sortAttrId') and sortAttrId != null and projection != 'ID'">
            ORDER BY ${sortAttrId} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY clinical_patient.ATTR_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaPatientClinicalData" resultType="org.cbioportal.model.meta.BaseMeta">
        SELECT
        COUNT(*) AS "totalCount"
        <include refid="fromPatient"/>
        <include refid="wherePatient"/>
    </select>

    <select id="fetchSampleClinicalDataCounts" resultType="org.cbioportal.model.ClinicalDataCount">
        SELECT count(*) as count,
        clinical_sample.ATTR_ID as attributeId,
        clinical_sample.ATTR_VALUE as value
        <include refid="fromSample"/>
        <include refid="whereSample"/>
        GROUP BY clinical_sample.ATTR_ID, clinical_sample.ATTR_VALUE
    </select>

    <select id="fetchPatientClinicalDataCounts" resultType="org.cbioportal.model.ClinicalDataCount">
        SELECT count(*) as count,
        clinical_patient.ATTR_ID as attributeId,
        clinical_patient.ATTR_VALUE as value
        <include refid="fromPatient"/>
        <if test="projection == 'DETAILED'">
            INNER JOIN sample ON patient.INTERNAL_ID = sample.PATIENT_ID
        </if>
        <include refid="wherePatient"/>
        GROUP BY clinical_patient.ATTR_ID, clinical_patient.ATTR_VALUE
    </select>

    <select id="getVisibleSampleInternalIdsForClinicalTable" resultType="Integer">
        <bind name="doSearch"        value="_parameter.containsKey('searchTerm') and searchTerm != null and not searchTerm.isBlank()" />
        <bind name="doSort"          value="_parameter.containsKey('sortAttrId') and sortAttrId != null" />
        <bind name="doPaginate"      value="_parameter.containsKey('limit') and limit != null and limit != 0" />
        <bind name="sortBySampleId"  value="sortAttrId == 'sampleId'" />
        <bind name="sortByPatientId" value="sortAttrId == 'patientId'" />
        <bind name="sortByAttribute" value="sortAttrId != 'sampleId' and sortAttrId != 'patientId'" />
        SELECT sample.INTERNAL_ID FROM sample
        INNER JOIN patient ON sample.PATIENT_ID = patient.INTERNAL_ID
        INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
        <if test="doSort">
            LEFT JOIN (<include refid="sortAttributeData"/>) as sortData
            ON sample.INTERNAL_ID = sortData.sampleInternalId
        </if>
        <if test="doSearch">
            INNER JOIN (<include refid="searchedAttributeData"/>) as searchData
            ON sample.INTERNAL_ID = searchData.sampleInternalId
        </if>
        <include refid="whereSample"/>
        <if test="doSort">
            <choose>
                <when test="sortBySampleId">
                    ORDER BY sample.STABLE_ID ${direction}
                </when>
                <when test="sortByPatientId">
                    ORDER BY patient.STABLE_ID ${direction}
                </when>
                <when test="sortByAttribute">
                    <choose>
                        <when test="_databaseId == 'mysql'">
                            ORDER BY ISNULL(sortData.sortAttrValue), sortData.sortAttrValue ${direction}
                        </when>
                        <when test="_databaseId == 'h2'">
                            ORDER BY sortData.sortAttrValue ${direction} NULLS LAST
                        </when>
                    </choose>
                </when>
                <otherwise></otherwise>
            </choose>
        </if>
        <if test="doPaginate">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <sql id="searchedAttributeData">
        SELECT
            DISTINCT sample.INTERNAL_ID sampleInternalId
        FROM sample
            INNER JOIN patient ON patient.INTERNAL_ID = sample.PATIENT_ID 
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
            INNER JOIN clinical_sample cs on sample.INTERNAL_ID = cs.INTERNAL_ID
            INNER JOIN clinical_patient cp on patient.INTERNAL_ID = cp.INTERNAL_ID
            <include refid="whereSample"/>
                AND (
                  cs.ATTR_VALUE LIKE CONCAT('%', #{searchTerm}, '%')
                  OR cp.ATTR_VALUE LIKE CONCAT('%', #{searchTerm}, '%')
                  OR sample.STABLE_ID LIKE CONCAT('%', #{searchTerm}, '%')
                  OR patient.STABLE_ID LIKE CONCAT('%', #{searchTerm}, '%')
            )
    </sql>
    
    <sql id="sortAttributeData">
        <choose>
            <when test="sortIsPatientAttr">
                SELECT sample.INTERNAL_ID sampleInternalId, sample.STABLE_ID sampleId, patient.STABLE_ID patientId, clinical_patient.ATTR_ID sortAttrId,
                <choose>
                    <when test="sortAttrIsNumber">CONVERT(clinical_patient.ATTR_VALUE, DECIMAL) sortAttrValue
                    </when>
                    <otherwise>
                        clinical_patient.ATTR_VALUE sortAttrValue
                    </otherwise>
                </choose>
                FROM sample
                INNER JOIN patient ON sample.PATIENT_ID = patient.INTERNAL_ID
                INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
                LEFT JOIN clinical_patient ON patient.INTERNAL_ID = clinical_patient.INTERNAL_ID AND clinical_patient.ATTR_ID = #{sortAttrId}
            </when>
            <otherwise>
                SELECT sample.INTERNAL_ID sampleInternalId, sample.STABLE_ID sampleId, patient.STABLE_ID patientId, clinical_sample.ATTR_ID sortAttrId,
                <choose>
                    <when test="sortAttrIsNumber">
                        CONVERT(clinical_sample.ATTR_VALUE, DECIMAL) sortAttrValue
                    </when>
                    <otherwise>
                        clinical_sample.ATTR_VALUE sortAttrValue
                    </otherwise>
                </choose>
                FROM clinical_sample
                INNER JOIN sample ON clinical_sample.INTERNAL_ID = sample.INTERNAL_ID
                INNER JOIN patient ON sample.PATIENT_ID = patient.INTERNAL_ID
                INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
                WHERE clinical_sample.ATTR_ID = #{sortAttrId}
            </otherwise>
        </choose>
    </sql>

</mapper>
