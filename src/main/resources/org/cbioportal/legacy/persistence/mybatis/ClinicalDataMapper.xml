<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.legacy.persistence.mybatis.ClinicalDataMapper">

    <sql id="selectSample">
        clinical_sample.internal_id AS "${prefix}internalId",
        sample.stable_id AS "${prefix}sampleId",
        patient.stable_id AS "${prefix}patientId",
        clinical_sample.attr_id AS "${prefix}attrId",
        cancer_study.cancer_study_identifier AS "${prefix}studyId"
        <if test="_parameter.containsKey('projection')">
            <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
                , clinical_sample.attr_value AS "${prefix}attrValue"
            </if>
            <if test="projection == 'DETAILED'">
                ,
                <include refid="org.cbioportal.legacy.persistence.mybatis.ClinicalAttributeMapper.select">
                    <property name="prefix" value="${prefix}clinicalAttribute."/>
                </include>
            </if>
        </if>
    </sql>

    <sql id="selectPatient">
        clinical_patient.internal_id AS "${prefix}internalId",
        patient.stable_id AS "${prefix}patientId",
        clinical_patient.attr_id AS "${prefix}attrId",
        cancer_study.cancer_study_identifier AS "${prefix}studyId"
        <if test="_parameter.containsKey('projection')">
            <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
                , clinical_patient.attr_value AS "${prefix}attrValue"
            </if>
            <if test="projection == 'DETAILED'">
                ,
                <include refid="org.cbioportal.legacy.persistence.mybatis.ClinicalAttributeMapper.select">
                    <property name="prefix" value="${prefix}clinicalAttribute."/>
                </include>
            </if>
        </if>
    </sql>
    <sql id="fromSample">
        FROM clinical_sample
        INNER JOIN sample ON clinical_sample.internal_id = sample.internal_id
        INNER JOIN patient ON sample.patient_id = patient.internal_id
        INNER JOIN cancer_study ON patient.cancer_study_id = cancer_study.cancer_study_id
    </sql>

    <sql id="fromSampleAndClinicalPatient">
        <include refid="fromSample"/>
        LEFT JOIN clinical_patient ON clinical_patient.internal_id = patient.internal_id
    </sql>

    <sql id="fromPatient">
        FROM clinical_patient
        INNER JOIN patient ON clinical_patient.internal_id = patient.internal_id
        INNER JOIN cancer_study ON patient.cancer_study_id = cancer_study.cancer_study_id
    </sql>

    <sql id="whereSample">
        <where>
            <if test="sampleIds == null">
                cancer_study.cancer_study_identifier = #{studyIds[0]}
            </if>
            <if test="sampleIds != null">
                <choose>
                    <when test="studyIds.stream().distinct().count() == 1">
                        cancer_study.cancer_study_identifier = #{studyIds[0]} AND
                        sample.stable_id IN
                            <foreach item="item" collection="sampleIds" open="(" separator="," close=")">#{item}</foreach>
                    </when>
                    <otherwise>
                        (cancer_study.cancer_study_identifier, sample.stable_id) IN
                            <foreach index="i" collection="sampleIds" open="(" separator="," close=")">(#{studyIds[${i}]},#{sampleIds[${i}]})</foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="_parameter.containsKey('attributeIds') and attributeIds != null">
                AND clinical_sample.attr_id IN
                    <foreach item="item" collection="attributeIds" open="(" separator="," close=")">#{item}</foreach>
            </if>
        </where>
    </sql>

    <sql id="wherePatient">
        <where>
            <if test="patientIds == null">
                cancer_study.cancer_study_identifier = #{studyIds[0]}
            </if>
            <if test="patientIds != null">
                <choose>
                    <when test="studyIds.stream().distinct().count() == 1">
                        cancer_study.cancer_study_identifier = #{studyIds[0]} AND
                        patient.stable_id IN
                            <foreach item="item" collection="patientIds" open="(" separator="," close=")">#{item}</foreach>
                    </when>
                    <otherwise>
                        (cancer_study.cancer_study_identifier, patient.stable_id) IN
                            <foreach index="i" collection="patientIds" open="(" separator="," close=")">(#{studyIds[${i}]},#{patientIds[${i}]})</foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="_parameter.containsKey('attributeIds') and attributeIds != null">
                AND clinical_patient.attr_id IN
                    <foreach item="item" collection="attributeIds" open="(" separator="," close=")">#{item}</foreach>
            </if>
        </where>
    </sql>

    <select id="getSampleClinicalData" resultType="org.cbioportal.legacy.model.ClinicalData">
        SELECT
        <include refid="selectSample">
            <property name="prefix" value=""/>
        </include>
        <include refid="fromSample"/>
        <if test="projection == 'DETAILED'">
            INNER JOIN clinical_attribute_meta ON clinical_sample.attr_id = clinical_attribute_meta.attr_id
            AND cancer_study.cancer_study_id = clinical_attribute_meta.cancer_study_id
            INNER JOIN type_of_cancer ON cancer_study.type_of_cancer_id = type_of_cancer.type_of_cancer_id
        </if>
        <include refid="whereSample"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY "${sortBy}" ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY clinical_sample.attr_id ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaSampleClinicalData" resultType="org.cbioportal.legacy.model.meta.BaseMeta">
        SELECT
        COUNT(*) AS "totalCount"
        <include refid="fromSample"/>
        <include refid="whereSample"/>
    </select>

    <select id="getPatientClinicalData" resultType="org.cbioportal.legacy.model.ClinicalData">
        SELECT
        <include refid="selectPatient">
            <property name="prefix" value=""/>
        </include>
        <include refid="fromPatient"/>
        <if test="projection == 'DETAILED'">
            INNER JOIN clinical_attribute_meta ON clinical_patient.attr_id = clinical_attribute_meta.attr_id
            AND cancer_study.cancer_study_id = clinical_attribute_meta.cancer_study_id
            INNER JOIN type_of_cancer ON cancer_study.type_of_cancer_id = type_of_cancer.type_of_cancer_id
        </if>
        <include refid="wherePatient"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY ${sortBy} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY clinical_patient.attr_id ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getPatientClinicalDataDetailedToSample" resultType="org.cbioportal.legacy.model.ClinicalData">
        SELECT
        <include refid="selectPatient">
            <property name="prefix" value=""/>
        </include>
        , sample.stable_id AS "sampleId"
        <include refid="fromPatient"/>
            INNER JOIN sample ON patient.internal_id = sample.patient_id
        <if test="projection == 'DETAILED'">
            INNER JOIN clinical_attribute_meta ON clinical_patient.attr_id = clinical_attribute_meta.attr_id
            AND cancer_study.cancer_study_id = clinical_attribute_meta.cancer_study_id
            INNER JOIN type_of_cancer ON cancer_study.type_of_cancer_id = type_of_cancer.type_of_cancer_id
        </if>
        <include refid="wherePatient"/>
        <if test="_parameter.containsKey('sortBy') and sortBy != null and projection != 'ID'">
            ORDER BY ${sortBy} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY clinical_patient.attr_id ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaPatientClinicalData" resultType="org.cbioportal.legacy.model.meta.BaseMeta">
        SELECT
        COUNT(*) AS "totalCount"
        <include refid="fromPatient"/>
        <include refid="wherePatient"/>
    </select>

    <select id="fetchSampleClinicalDataCounts" resultType="org.cbioportal.legacy.model.ClinicalDataCount">
        SELECT count(*) as count,
        clinical_sample.attr_id as attributeId,
        clinical_sample.attr_value as value
        <include refid="fromSample"/>
        <include refid="whereSample"/>
        GROUP BY clinical_sample.attr_id, clinical_sample.attr_value
    </select>

    <select id="fetchPatientClinicalDataCounts" resultType="org.cbioportal.legacy.model.ClinicalDataCount">
        SELECT count(*) as count,
        clinical_patient.attr_id as attributeId,
        clinical_patient.attr_value as value
        <include refid="fromPatient"/>
        <if test="projection == 'DETAILED'">
            INNER JOIN sample ON patient.internal_id = sample.patient_id
        </if>
        <include refid="wherePatient"/>
        GROUP BY clinical_patient.attr_id, clinical_patient.attr_value
    </select>

    <select id="getSampleClinicalTable" resultType="org.cbioportal.legacy.model.ClinicalData">
        SELECT
        <include refid="selectSample">
            <property name="prefix" value=""/>
        </include>
        <include refid="fromSample"/>
        <include refid="whereSampleSearchAndPagination"/>
    </select>

    <select id="getSampleClinicalTableCount" resultType="Integer">
        SELECT count(DISTINCT clinical_sample.internal_id)
        <include refid="fromSample"/>
        <include refid="whereSampleSearchAndPagination"/>
    </select>

    <sql id="whereSampleSearchAndPagination">
        INNER JOIN (
            SELECT DISTINCT clinical_sample.internal_id
            <if test="sortBy != null">
                <if test="sortBy == 'sampleId'">
                  , sample.stable_id AS sort_by
                </if>
                <if test="sortBy == 'patientId'">
                  , patient.stable_id AS sort_by
                </if>
                <!-- else: -->
                <if test="sortBy != 'sampleId' and sortBy != 'patientId'">
                  <!-- Mark samples without the sort attribute as NULL: -->
                  , CASE
                        WHEN clinical_sample.attr_id = #{sortBy} THEN clinical_sample.attr_value
                        WHEN clinical_patient.attr_id = #{sortBy} THEN clinical_patient.attr_value
                        ELSE NULL
                    END AS sort_by
                </if>
            </if>
            <include refid="fromSampleAndClinicalPatient"/>
            <include refid="whereSample"/>
            <if test="searchTerm != null and not searchTerm.isBlank()">
                AND
                clinical_sample.attr_value LIKE CONCAT('%', #{searchTerm}, '%')
            </if>
            <if test=" sortBy != null">
                <!-- Put 'NULL samples' last: -->
                <choose>
                    <when test="_databaseId == 'mysql'">
                        ORDER BY ISNULL(sort_by), sort_by ${direction}
                    </when>
                    <when test="_databaseId == 'h2'">
                        ORDER BY sort_by ${direction} NULLS LAST
                    </when>
                </choose>
            </if>

            <if test="_parameter.containsKey('limit') and limit != null and limit != 0">
                LIMIT #{limit} OFFSET #{offset}
            </if>
        ) AS sample_id_subquery
          ON clinical_sample.internal_id = sample_id_subquery.internal_id
    </sql>

    <select id="getVisibleSampleInternalIdsForClinicalTable" resultType="Integer">
        <bind name="doSearch"        value="_parameter.containsKey('searchTerm') and searchTerm != null and not searchTerm.isBlank()" />
        <bind name="doSort"          value="_parameter.containsKey('sortAttrId') and sortAttrId != null" />
        <bind name="doPaginate"      value="_parameter.containsKey('limit') and limit != null and limit != 0" />
        <bind name="sortBySampleId"  value="sortAttrId == 'sampleId'" />
        <bind name="sortByPatientId" value="sortAttrId == 'patientId'" />
        <bind name="sortByAttribute" value="sortAttrId != 'sampleId' and sortAttrId != 'patientId'" />
        SELECT sample.internal_id FROM sample
        INNER JOIN patient ON sample.patient_id = patient.internal_id
        INNER JOIN cancer_study ON patient.cancer_study_id = cancer_study.cancer_study_id
        <if test="doSort">
            LEFT JOIN (<include refid="sortAttributeData"/>) as sortData
            ON sample.internal_id = sortData.sampleInternalId
        </if>
        <if test="doSearch">
            INNER JOIN (<include refid="searchedAttributeData"/>) as searchData
            ON sample.internal_id = searchData.sampleInternalId
        </if>
        <include refid="whereSample"/>
        <if test="doSort">
            <choose>
                <when test="sortBySampleId">
                    ORDER BY sample.stable_id ${direction}
                </when>
                <when test="sortByPatientId">
                    ORDER BY patient.stable_id ${direction}
                </when>
                <when test="sortByAttribute">
                    <choose>
                        <when test="_databaseId == 'mysql'">
                            ORDER BY ISNULL(sortData.sortAttrValue), sortData.sortAttrValue ${direction}
                        </when>
                        <when test="_databaseId == 'h2'">
                            ORDER BY sortData.sortAttrValue ${direction} NULLS LAST
                        </when>
                    </choose>
                </when>
                <otherwise></otherwise>
            </choose>
        </if>
        <if test="doPaginate">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <sql id="searchedAttributeData">
        SELECT
        DISTINCT sample.internal_id sampleInternalId
        FROM sample
        INNER JOIN patient ON patient.internal_id = sample.patient_id
        INNER JOIN cancer_study ON patient.cancer_study_id = cancer_study.cancer_study_id
        INNER JOIN clinical_sample cs on sample.internal_id = cs.internal_id
        INNER JOIN clinical_patient cp on patient.internal_id = cp.internal_id
        <include refid="whereSample"/>
        AND (
        cs.ATTR_VALUE LIKE CONCAT('%', #{searchTerm}, '%')
        OR cp.ATTR_VALUE LIKE CONCAT('%', #{searchTerm}, '%')
        OR sample.STABLE_ID LIKE CONCAT('%', #{searchTerm}, '%')
        OR patient.STABLE_ID LIKE CONCAT('%', #{searchTerm}, '%')
        )
    </sql>

    <sql id="sortAttributeData">
        <choose>
            <when test="sortIsPatientAttr">
                SELECT sample.internal_id sampleInternalId, sample.stable_id sampleId, patient.stable_id patientId, clinical_patient.attr_id sortAttrId,
                <choose>
                    <when test="sortAttrIsNumber">CONVERT(clinical_patient.attr_value, DECIMAL) sortAttrValue
                    </when>
                    <otherwise>
                        clinical_patient.attr_value sortAttrValue
                    </otherwise>
                </choose>
                FROM sample
                INNER JOIN patient ON sample.patient_id = patient.internal_id
                INNER JOIN cancer_study ON patient.cancer_study_id = cancer_study.cancer_study_id
                LEFT JOIN clinical_patient ON patient.internal_id = clinical_patient.internal_id AND clinical_patient.attr_id = #{sortAttrId}
            </when>
            <otherwise>
                SELECT sample.internal_id sampleInternalId, sample.stable_id sampleId, patient.stable_id patientId, clinical_sample.attr_id sortAttrId,
                <choose>
                    <when test="sortAttrIsNumber">
                        CONVERT(clinical_sample.attr_value, DECIMAL) sortAttrValue
                    </when>
                    <otherwise>
                        clinical_sample.attr_value sortAttrValue
                    </otherwise>
                </choose>
                FROM clinical_sample
                INNER JOIN sample ON clinical_sample.internal_id = sample.internal_id
                INNER JOIN patient ON sample.patient_id = patient.internal_id
                INNER JOIN cancer_study ON patient.cancer_study_id = cancer_study.cancer_study_id
                WHERE clinical_sample.attr_id = #{sortAttrId}
            </otherwise>
        </choose>
    </sql>

    <select id="getSampleClinicalDataBySampleInternalIds" resultType="org.cbioportal.legacy.model.ClinicalData">
        <!-- Always 'SUMMARY' projection. 'DETAILED' not implemented. -->
        SELECT sample.internal_id internalId, sample.stable_id sampleId, patient.stable_id patientId, cancer_study.cancer_study_identifier studyId, clinical_sample.attr_id attrId, clinical_sample.attr_value attrValue
        FROM clinical_sample
        INNER JOIN sample ON clinical_sample.internal_id = sample.internal_id
        INNER JOIN patient ON sample.patient_id = patient.internal_id
        INNER JOIN cancer_study ON patient.cancer_study_id = cancer_study.cancer_study_id
        WHERE sample.internal_id IN
        <foreach item="item" collection="sampleInternalIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getPatientClinicalDataBySampleInternalIds" resultType="org.cbioportal.legacy.model.ClinicalData">
        <!-- Always 'SUMMARY' projection. 'DETAILED' not implemented. -->
        SELECT sample.internal_id internalId, sample.stable_id sampleId, patient.stable_id patientId, cancer_study.cancer_study_identifier studyId, clinical_patient.attr_id attrId, clinical_patient.attr_value attrValue
        FROM clinical_patient
        INNER JOIN patient ON clinical_patient.internal_id = patient.internal_id
        INNER JOIN sample ON patient.internal_id = sample.patient_id
        INNER JOIN cancer_study ON patient.cancer_study_id = cancer_study.cancer_study_id
        WHERE sample.internal_id IN
        <foreach item="item" collection="sampleInternalIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>
