<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
   Copyright (c) 2016 Memorial Sloan-Kettering Cancer Center.

   This library is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS
   FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder
   is on an "as is" basis, and Memorial Sloan-Kettering Cancer Center has no
   obligations to provide maintenance, support, updates, enhancements or
   modifications. In no event shall Memorial Sloan-Kettering Cancer Center be
   liable to any party for direct, indirect, special, incidental or
   consequential damages, including lost profits, arising out of the use of this
   software and its documentation, even if Memorial Sloan-Kettering Cancer
   Center has been advised of the possibility of such damage.

   This file is part of cBioPortal.

   cBioPortal is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as
   published by the Free Software Foundation, either version 3 of the
   License.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<mapper namespace="org.mskcc.cbio.portal.persistence.StructuralVariantMapper">

    <select id="getStructuralVariant" resultType="org.mskcc.cbio.portal.model.StructuralVariant">
        select
        structural_variant.SAMPLE_ID as sampleId,
        structural_variant.ANNOTATION as annotation,
        structural_variant.BREAKPOINT_TYPE as breakpointType,
        structural_variant.COMMENTS as comments,
        structural_variant.CONFIDENCE_CLASS as confidenceClass,
        structural_variant.CONNECTION_TYPE as connectionType,
        structural_variant.EVENT_INFO as eventInfo,
        structural_variant.MAPQ as mapq,
        structural_variant.NORMAL_READ_COUNT as normalReadCount,
        structural_variant.NORMAL_VARIANT_COUNT as normalVariantCount,
        structural_variant.PAIRED_END_READ_SUPPORT as pairedEndReadSupport,
        structural_variant.SITE1_CHROM as site1Chrom,
        structural_variant.SITE1_DESC as site1Desc,
        gene1.HUGO_GENE_SYMBOL as site1Gene,
        structural_variant.SITE1_POS as site1Pos,
        structural_variant.SITE2_CHROM as site2Chrom,
        structural_variant.SITE2_DESC as site2Desc,
        gene2.HUGO_GENE_SYMBOL as site2Gene,
        structural_variant.SITE2_POS as site2Pos,
        structural_variant.SPLIT_READ_SUPPORT as splitReadSupport,
        structural_variant.SV_CLASS_NAME as svClassName,
        structural_variant.SV_DESC as svDesc,
        structural_variant.SV_LENGTH as svLength,
        structural_variant.TUMOR_READ_COUNT as tumorReadCount,
        structural_variant.TUMOR_VARIANT_COUNT as tumorVariantCount,
        structural_variant.VARIANT_STATUS_NAME as variantStatusName,
        gene1.HUGO_GENE_SYMBOL as "gene1.hugoGeneSymbol",
        gene1.ENTREZ_GENE_ID as "gene1.entrezGeneId",
        gene2.HUGO_GENE_SYMBOL as "gene2.hugoGeneSymbol",
        gene2.ENTREZ_GENE_ID as "gene2.entrezGeneId",
        sample.STABLE_ID as "sample.stableId"

        from structural_variant
        inner join sample on structural_variant.SAMPLE_ID = sample.INTERNAL_ID
        join gene gene1 on gene1.ENTREZ_GENE_ID = structural_variant.SITE1_ENTREZ_GENE_ID
        join gene gene2 on gene2.ENTREZ_GENE_ID = structural_variant.SITE2_ENTREZ_GENE_ID
        join genetic_profile on genetic_profile.GENETIC_PROFILE_ID = structural_variant.GENETIC_PROFILE_ID

        <where>
            <if test="geneticProfileStableIds != null and !geneticProfileStableIds.isEmpty()">
                genetic_profile.STABLE_ID in
                <foreach item="item" collection="geneticProfileStableIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="hugoGeneSymbols != null and !hugoGeneSymbols.isEmpty()">
                and (gene1.HUGO_GENE_SYMBOL in
                <foreach item="item" collection="hugoGeneSymbols" open="(" separator="," close=")">
                    #{item}
                </foreach>
                or gene2.HUGO_GENE_SYMBOL in
                <foreach item="item" collection="hugoGeneSymbols" open="(" separator="," close=")">
                    #{item}
                </foreach>
                )
            </if>
            <if test="sampleStableIds != null and !sampleStableIds.isEmpty()">
                and sample.STABLE_ID in
                <foreach item="item" collection="sampleStableIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
</mapper>
