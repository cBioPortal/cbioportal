name: genie-performance-test

on:
  schedule:
    - cron:  '*/1 * * * *'

jobs:
  probe-genie-endpoint:
    
    name: Genie private endpoint probe

    runs-on: ubuntu-latest
    
    env:
      SLACK_URL_SECRET: ${{ secrets.SLACK_URL_SECRET }}
      GITHUB_ACTIONS_URL: "https://github.com/mandawilson/cbioportal/actions"
      SLACK_CHANNEL: "genie-private-github-action-test" 

    steps:
    - name: GET request to genie private page
      env:
        GENIE_PRIVATE_SECRET: ${{ secrets.GENIE_PRIVATE_SECRET }}
        MAX_WAIT_TIME_IN_SECONDS: 2.0
        URL: "https://genie.cbioportal.org/api/studies/genie_public"
        OK_RESPONSE_CODE: 200
      # GET request to URL with a MAX_WAIT_TIME_IN_SECONDS second limit
      #   if curl fails, automatically exit with curl's non-zero exit code
      #   else if we did not get a OK_RESPONSE_CODE exit with a non-zero exit code
      #   else we are OK!
      run: |
        curl --max-time $MAX_WAIT_TIME_IN_SECONDS -I -H "Authorization:Bearer $GENIE_PRIVATE_SECRET" "$URL" -H "accept:application/json" > curl.out
        RESPONSE_CODE=`head -1 curl.out | cut -d" " -f2`
        if [ "$RESPONSE_CODE" != "$OK_RESPONSE_CODE" ]; then
          echo "Request failed with response code '$RESPONSE_CODE', expected '$OK_RESPONSE_CODE'"
          exit 1
        else
          echo "Request succeeded with expected response code '$OK_RESPONSE_CODE'"
          exit 0
        fi
    - name: Failure
      if: failure()
      run: curl -X POST --data-urlencode "payload={\"channel\":\"#$SLACK_CHANNEL\", \"username\":\"github-action\", \"text\":\"Genie private performance test failed! <$GITHUB_ACTIONS_URL|view details>\", \"icon_emoji\":\":cloud:\"}" $SLACK_URL_SECRET
    - name: Success
      if: success()
      run: curl -X POST --data-urlencode "payload={\"channel\":\"#$SLACK_CHANNEL\", \"username\":\"github-action\", \"text\":\"Genie private performance test succeeded! <$GITHUB_ACTIONS_URL|view details>\", \"icon_emoji\":\":sunny:\"}" $SLACK_URL_SECRET
