<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.persistence.mybatis.MutationMapper">
    

    <sql id="select">
        genetic_profile.STABLE_ID AS molecularProfileId,
        sample.STABLE_ID AS sampleId,
        patient.STABLE_ID AS patientId,
        mutation.ENTREZ_GENE_ID as entrezGeneId,
        cancer_study.CANCER_STUDY_IDENTIFIER AS studyId
        <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
            ,
            mutation.CENTER AS center,
            mutation.MUTATION_STATUS AS mutationStatus,
            mutation.VALIDATION_STATUS AS validationStatus,
            mutation.TUMOR_ALT_COUNT AS tumorAltCount,
            mutation.TUMOR_REF_COUNT AS tumorRefCount,
            mutation.NORMAL_ALT_COUNT AS normalAltCount,
            mutation.NORMAL_REF_COUNT AS normalRefCount,
            mutation.AMINO_ACID_CHANGE AS aminoAcidChange,
            mutation_event.CHR as chr,
            mutation_event.START_POSITION AS startPosition,
            mutation_event.END_POSITION AS endPosition,
            mutation_event.REFERENCE_ALLELE AS referenceAllele,
            mutation_event.TUMOR_SEQ_ALLELE AS tumorSeqAllele,
            mutation_event.PROTEIN_CHANGE AS proteinChange,
            mutation_event.MUTATION_TYPE AS mutationType,
            mutation_event.FUNCTIONAL_IMPACT_SCORE AS functionalImpactScore,
            mutation_event.FIS_VALUE AS fisValue,
            mutation_event.LINK_XVAR AS linkXvar,
            mutation_event.LINK_PDB AS linkPdb,
            mutation_event.LINK_MSA AS linkMsa,
            mutation_event.NCBI_BUILD AS ncbiBuild,
            mutation_event.VARIANT_TYPE AS variantType,
            mutation_event.ONCOTATOR_REFSEQ_MRNA_ID AS oncotatorRefseqMrnaId,
            mutation_event.ONCOTATOR_PROTEIN_POS_START AS oncotatorProteinPosStart,
            mutation_event.ONCOTATOR_PROTEIN_POS_END AS oncotatorProteinPosEnd,
            mutation_event.KEYWORD AS keyword,
            mutation.DRIVER_FILTER as driverFilter,
            mutation.DRIVER_FILTER_ANNOTATION as driverFilterAnnotation,
            mutation.DRIVER_TIERS_FILTER as driverTiersFilter,
            mutation.DRIVER_TIERS_FILTER_ANNOTATION as driverTiersFilterAnnotation
        </if>
        <if test="projection == 'DETAILED'">
            ,
            <include refid="org.cbioportal.persistence.mybatis.GeneMapper.select">
                <property name="prefix" value="gene."/>
            </include>
        </if>
    </sql>

    <sql id="from">
        FROM mutation
        INNER JOIN genetic_profile ON mutation.GENETIC_PROFILE_ID = genetic_profile.GENETIC_PROFILE_ID
        INNER JOIN sample ON mutation.SAMPLE_ID = sample.INTERNAL_ID
        INNER JOIN patient ON sample.PATIENT_ID = patient.INTERNAL_ID
        INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
    </sql>

    <sql id="where">
        <where>
            genetic_profile.STABLE_ID = #{molecularProfileId}
            <if test="sampleIds != null and !sampleIds.isEmpty()">
                AND sample.STABLE_ID IN
                <foreach item="item" collection="sampleIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="entrezGeneIds != null and !entrezGeneIds.isEmpty()">
                AND mutation.ENTREZ_GENE_ID IN
                <foreach item="item" collection="entrezGeneIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="snpOnly != null and snpOnly == true">
                AND mutation_event.REFERENCE_ALLELE IN ('A','T','C','G') 
                AND mutation_event.TUMOR_SEQ_ALLELE IN ('A','T','C','G')
            </if>
        </where>
    </sql>

    <sql id="whereBySampleListId">
        <where>
            genetic_profile.STABLE_ID = #{molecularProfileId}
            AND mutation.SAMPLE_ID IN
            (
                SELECT sample_list_list.SAMPLE_ID FROM sample_list_list
                INNER JOIN sample_list ON sample_list_list.LIST_ID = sample_list.LIST_ID
                WHERE sample_list.STABLE_ID = #{sampleListId}
                AND sample_list_list.SAMPLE_ID = mutation.SAMPLE_ID
            )
            <if test="entrezGeneIds != null and !entrezGeneIds.isEmpty()">
                AND mutation.ENTREZ_GENE_ID IN
                <foreach item="item" collection="entrezGeneIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="snpOnly != null and snpOnly == true">
                AND mutation_event.REFERENCE_ALLELE IN ('A','T','C','G')
                AND mutation_event.TUMOR_SEQ_ALLELE IN ('A','T','C','G')
            </if>
        </where>
    </sql>
    
    <sql id="whereInMultipleMolecularProfiles">
        <where>
            <if test="sampleIds != null and !sampleIds.isEmpty()">
                mutation.SAMPLE_ID IN (
                SELECT sample.INTERNAL_ID from sample
                INNER JOIN patient ON sample.PATIENT_ID = patient.INTERNAL_ID
                INNER JOIN genetic_profile ON patient.CANCER_STUDY_ID = genetic_profile.CANCER_STUDY_ID
                WHERE 
                <if test="@java.util.Arrays@stream(molecularProfileIds.toArray()).distinct().count() == 1">
                    genetic_profile.STABLE_ID = #{molecularProfileIds[0]} AND
                    sample.STABLE_ID IN
                    <foreach item="item" collection="sampleIds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="@java.util.Arrays@stream(molecularProfileIds.toArray()).distinct().count() > 1">
                    (sample.STABLE_ID, genetic_profile.STABLE_ID) IN
                    <foreach index="i" collection="sampleIds" open="(" separator="," close=")">
                        (#{sampleIds[${i}]}, #{molecularProfileIds[${i}]})
                    </foreach>
                    AND genetic_profile.STABLE_ID IN
                    <foreach item="item" collection="molecularProfileIds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                AND sample.INTERNAL_ID = mutation.SAMPLE_ID 
                AND genetic_profile.GENETIC_PROFILE_ID = mutation.GENETIC_PROFILE_ID)
            </if>
            <if test="sampleIds == null">
                genetic_profile.STABLE_ID IN
                <foreach item="item" collection="molecularProfileIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="entrezGeneIds != null and !entrezGeneIds.isEmpty()">
                AND mutation.ENTREZ_GENE_ID IN
                <foreach item="item" collection="entrezGeneIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="snpOnly != null and snpOnly == true">
                AND mutation_event.REFERENCE_ALLELE IN ('A','T','C','G')
                AND mutation_event.TUMOR_SEQ_ALLELE IN ('A','T','C','G')
            </if>
        </where>
    </sql>

    <select id="getMutationsBySampleListId" resultType="org.cbioportal.model.Mutation">
        SELECT
        <include refid="select"/>
        <include refid="from"/>
        <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
            INNER JOIN mutation_event ON mutation.MUTATION_EVENT_ID = mutation_event.MUTATION_EVENT_ID
        </if>
        <if test="projection == 'DETAILED'">
            INNER JOIN gene ON mutation.ENTREZ_GENE_ID = gene.ENTREZ_GENE_ID
        </if>
        <include refid="whereBySampleListId"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY ${sortBy} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY genetic_profile.STABLE_ID ASC, sample.STABLE_ID ASC, mutation.ENTREZ_GENE_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaMutationsBySampleListId" resultType="org.cbioportal.model.meta.MutationMeta">
        SELECT
        COUNT(*) AS totalCount,
        COUNT(DISTINCT(mutation.SAMPLE_ID)) AS sampleCount
        <include refid="from"/>
        <include refid="whereBySampleListId"/>
    </select>
    
    <select id="getMutationsInMultipleMolecularProfiles" resultType="org.cbioportal.model.Mutation">
        SELECT
        <include refid="select"/>
        <include refid="from"/>
        <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
            INNER JOIN mutation_event ON mutation.MUTATION_EVENT_ID = mutation_event.MUTATION_EVENT_ID
        </if>
        <if test="projection == 'DETAILED'">
            INNER JOIN gene ON mutation.ENTREZ_GENE_ID = gene.ENTREZ_GENE_ID
        </if>
        <include refid="whereInMultipleMolecularProfiles"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY ${sortBy} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY genetic_profile.STABLE_ID ASC, sample.STABLE_ID ASC, mutation.ENTREZ_GENE_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaMutationsInMultipleMolecularProfiles" resultType="org.cbioportal.model.meta.MutationMeta">
        SELECT
        COUNT(*) AS totalCount,
        COUNT(DISTINCT(mutation.SAMPLE_ID)) AS sampleCount
        <include refid="from"/>
        <include refid="whereInMultipleMolecularProfiles"/>
    </select>

    <select id="getMutationsBySampleIds" resultType="org.cbioportal.model.Mutation">
        SELECT
        <include refid="select"/>
        <include refid="from"/>
        <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
            INNER JOIN mutation_event ON mutation.MUTATION_EVENT_ID = mutation_event.MUTATION_EVENT_ID
        </if>
        <if test="projection == 'DETAILED'">
            INNER JOIN gene ON mutation.ENTREZ_GENE_ID = gene.ENTREZ_GENE_ID
        </if>
        <include refid="where"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY ${sortBy} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY genetic_profile.STABLE_ID ASC, sample.STABLE_ID ASC, mutation.ENTREZ_GENE_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaMutationsBySampleIds" resultType="org.cbioportal.model.meta.MutationMeta">
        SELECT
        COUNT(*) AS totalCount,
        COUNT(DISTINCT(mutation.SAMPLE_ID)) AS sampleCount
        <include refid="from"/>
        <include refid="where"/>
    </select>

    <select id="getSampleCountByEntrezGeneIdsAndSampleIds" resultType="org.cbioportal.model.MutationCountByGene">
        SELECT
        mutation.ENTREZ_GENE_ID AS entrezGeneId,
        gene.HUGO_GENE_SYMBOL AS hugoGeneSymbol,
        COUNT(*) AS totalCount,
        COUNT(DISTINCT(mutation.SAMPLE_ID)) AS numberOfAlteredCases
        FROM mutation
        INNER JOIN genetic_profile ON mutation.GENETIC_PROFILE_ID = genetic_profile.GENETIC_PROFILE_ID
        INNER JOIN sample ON mutation.SAMPLE_ID = sample.INTERNAL_ID
        INNER JOIN gene ON mutation.ENTREZ_GENE_ID = gene.ENTREZ_GENE_ID
        <include refid="where"/>
        GROUP BY mutation.ENTREZ_GENE_ID
    </select>

    <select id="getSampleCountInMultipleMolecularProfiles" resultType="org.cbioportal.model.MutationCountByGene">
        SELECT
        mutation.ENTREZ_GENE_ID AS entrezGeneId,
        gene.HUGO_GENE_SYMBOL AS hugoGeneSymbol,
        COUNT(*) AS totalCount,
        COUNT(DISTINCT(mutation.SAMPLE_ID)) AS numberOfAlteredCases
        FROM mutation
        INNER JOIN mutation_event ON mutation_event.MUTATION_EVENT_ID = mutation.MUTATION_EVENT_ID AND mutation_event.MUTATION_TYPE != 'Fusion'
        INNER JOIN genetic_profile ON mutation.GENETIC_PROFILE_ID = genetic_profile.GENETIC_PROFILE_ID
        INNER JOIN sample ON mutation.SAMPLE_ID = sample.INTERNAL_ID
        INNER JOIN gene ON mutation.ENTREZ_GENE_ID = gene.ENTREZ_GENE_ID
        <include refid="whereInMultipleMolecularProfiles"/>
        GROUP BY mutation.ENTREZ_GENE_ID
    </select>

    <select id="getSampleCountInMultipleMolecularProfilesForFusions" resultType="org.cbioportal.model.MutationCountByGene">
        SELECT
        mutation.ENTREZ_GENE_ID AS entrezGeneId,
        gene.HUGO_GENE_SYMBOL AS hugoGeneSymbol,
        COUNT(*) AS totalCount,
        COUNT(DISTINCT(mutation.SAMPLE_ID)) AS numberOfAlteredCases
        FROM mutation
        INNER JOIN mutation_event ON mutation_event.MUTATION_EVENT_ID = mutation.MUTATION_EVENT_ID AND mutation_event.MUTATION_TYPE = 'Fusion'
        INNER JOIN genetic_profile ON mutation.GENETIC_PROFILE_ID = genetic_profile.GENETIC_PROFILE_ID
        INNER JOIN sample ON mutation.SAMPLE_ID = sample.INTERNAL_ID
        INNER JOIN gene ON mutation.ENTREZ_GENE_ID = gene.ENTREZ_GENE_ID
        <include refid="whereInMultipleMolecularProfiles"/>
        GROUP BY mutation.ENTREZ_GENE_ID
    </select>

    <select id="getPatientCountInMultipleMolecularProfiles" resultType="org.cbioportal.model.MutationCountByGene">
        SELECT
        mutation.ENTREZ_GENE_ID AS entrezGeneId,
        gene.HUGO_GENE_SYMBOL AS hugoGeneSymbol,
        COUNT(*) AS totalCount,
        COUNT(DISTINCT(patient.INTERNAL_ID)) AS numberOfAlteredCases
        FROM mutation
        INNER JOIN genetic_profile ON mutation.GENETIC_PROFILE_ID = genetic_profile.GENETIC_PROFILE_ID
        INNER JOIN sample ON mutation.SAMPLE_ID = sample.INTERNAL_ID
        INNER JOIN patient ON sample.PATIENT_ID = patient.INTERNAL_ID
        INNER JOIN gene ON mutation.ENTREZ_GENE_ID = gene.ENTREZ_GENE_ID
        WHERE
        <if test="patientIds != null and !patientIds.isEmpty()">
            <if test="@java.util.Arrays@stream(molecularProfileIds.toArray()).distinct().count() == 1">
                genetic_profile.STABLE_ID = #{molecularProfileIds[0]}
                AND patient.STABLE_ID IN
                <foreach item="item" collection="patientIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="@java.util.Arrays@stream(molecularProfileIds.toArray()).distinct().count() > 1">
                (patient.STABLE_ID, genetic_profile.STABLE_ID) IN
                <foreach index="i" collection="patientIds" open="(" separator="," close=")">
                      (#{patientIds[${i}]}, #{molecularProfileIds[${i}]})
                </foreach>
                AND genetic_profile.STABLE_ID IN
                <foreach item="item" collection="molecularProfileIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </if>
		<if test="patientIds == null">
		    genetic_profile.STABLE_ID IN
			<foreach item="item" collection="molecularProfileIds" open="(" separator="," close=")">
			    #{item}
			</foreach>
		</if>
        <if test="entrezGeneIds != null and !entrezGeneIds.isEmpty()">
            AND mutation.ENTREZ_GENE_ID IN
            <foreach item="item" collection="entrezGeneIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="snpOnly != null and snpOnly == true">
            AND mutation_event.REFERENCE_ALLELE IN ('A','T','C','G')
            AND mutation_event.TUMOR_SEQ_ALLELE IN ('A','T','C','G')
        </if>
        GROUP BY mutation.ENTREZ_GENE_ID
    </select>
    
    <select id="getMutationCountByPosition" resultType="org.cbioportal.model.MutationCountByPosition">
        SELECT
        #{entrezGeneId} AS entrezGeneId,
        #{proteinPosStart} AS proteinPosStart,
        #{proteinPosEnd} AS proteinPosEnd,
        COUNT(*) AS count
        FROM mutation
        INNER JOIN mutation_event ON mutation.MUTATION_EVENT_ID = mutation_event.MUTATION_EVENT_ID
        WHERE mutation_event.ENTREZ_GENE_ID = #{entrezGeneId}
        AND mutation_event.ONCOTATOR_PROTEIN_POS_START >= #{proteinPosStart}
        AND mutation_event.ONCOTATOR_PROTEIN_POS_END <![CDATA[ <= ]]> #{proteinPosEnd}
    </select>
</mapper>
