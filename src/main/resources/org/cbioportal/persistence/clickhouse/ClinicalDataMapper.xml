<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.persistence.clickhouse.mapper.ClinicalDataMapper">

    <sql id="selectSample">
        row_number() OVER () AS "${prefix}internalId",
        
        sampleIdentifier AS "${prefix}sampleId",
        patientIdentifier AS "${prefix}patientId",
        attrId AS "${prefix}attrId",
        cancerStudyIdentifier AS "${prefix}studyId"
        <if test="_parameter.containsKey('projection')">
            <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
            	,
                value AS "${prefix}attrValue"
            </if>
            <if test="projection == 'DETAILED'">
                ,
                <include refid="org.cbioportal.persistence.clickhouse.mapper.ClinicalAttributeMapper.select">
                    <property name="prefix" value="${prefix}clinicalAttribute."/>
                </include>
            </if>
        </if>
    </sql>
    
    <sql id="selectPatient">
        row_number() OVER () AS "${prefix}internalId",
        patientIdentifier AS "${prefix}patientId",
        attrId AS "${prefix}attrId",
        cancerStudyIdentifier AS "${prefix}studyId"
        <if test="_parameter.containsKey('projection')">
            <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
                , value AS "${prefix}attrValue"
            </if>
            <if test="projection == 'DETAILED'">
                ,
                <include refid="org.cbioportal.persistence.clickhouse.mapper.ClinicalAttributeMapper.select">
                    <property name="prefix" value="${prefix}clinicalAttribute."/>
                </include>
            </if>
        </if>
    </sql>
    
	<sql id="whereSample">
        <where>
            <if test="sampleIds == null">
                cancerStudyIdentifier = #{studyIds[0]}
            </if>
            <if test="sampleIds != null">
                <choose>
                    <when test="studyIds.stream().distinct().count() == 1">
                        cancerStudyIdentifier = #{studyIds[0]} AND
                        sampleIdentifier IN
                        <foreach item="item" collection="sampleIds" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        (cancerStudyIdentifier, sampleIdentifier) IN
                        <foreach index="i" collection="sampleIds" open="(" separator="," close=")">
                            (#{studyIds[${i}]}, #{sampleIds[${i}]})
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="_parameter.containsKey('attributeIds') and attributeIds != null">
                AND attrId IN
                <foreach item="item" collection="attributeIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>
    
    <sql id="wherePatient">
        <where>
            <if test="patientIds == null">
                cancerStudyIdentifier = #{studyIds[0]}
            </if>
            <if test="patientIds != null">
                <choose>
                    <when test="studyIds.stream().distinct().count() == 1">
                        cancerStudyIdentifier = #{studyIds[0]} AND
                        patientIdentifier IN
                        <foreach item="item" collection="patientIds" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        (cancerStudyIdentifier, patientIdentifier) IN
                        <foreach index="i" collection="patientIds" open="(" separator="," close=")">
                            (#{studyIds[${i}]}, #{patientIds[${i}]})
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="_parameter.containsKey('attributeIds') and attributeIds != null">
                AND attrId IN
                <foreach item="item" collection="attributeIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>
    
    <select id="getSampleClinicalData" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectSample">
            <property name="prefix" value=""/>
        </include>
		FROM clinical_sample
        <include refid="whereSample"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY "${sortBy}" ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY attrId ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>
    
    <select id="getPatientClinicalData" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectPatient">
            <property name="prefix" value=""/>
        </include>
        FROM clinical_patient
        <include refid="wherePatient"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY ${sortBy} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY attrId ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getSampleClinicalTable" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectSample">
            <property name="prefix" value=""/>
        </include>
        FROM clinical_sample
        <include refid="whereSample" />
    </select>

    <select id="getSampleClinicalTableCount" resultType="Integer">
        SELECT count(DISTINCT sampleIdentifier)
        FROM clinical_sample
        <include refid="whereSample" />
    </select>
    
    <select id="getMetaSampleClinicalData" resultType="org.cbioportal.model.meta.BaseMeta">
        SELECT
        COUNT(*) AS "totalCount"
        FROM clinical_sample
        <include refid="whereSample"/>
    </select>
    
    <select id="getMetaPatientClinicalData" resultType="org.cbioportal.model.meta.BaseMeta">
        SELECT
        COUNT(*) AS "totalCount"
        FROM clinical_patient
        <include refid="wherePatient"/>
    </select>
    
    <select id="fetchSampleClinicalDataCounts" resultType="org.cbioportal.model.ClinicalDataCount">
        SELECT count(*) as count,
        attrId as attributeId,
        value
        FROM clinical_sample
        <include refid="whereSample"/>
        GROUP BY attrId, value
    </select>
    
    
    <select id="getPatientClinicalDataDetailedToSample" resultType="org.cbioportal.model.ClinicalData">
    	SELECT
    	<include refid="selectPatient">
            <property name="prefix" value="cp."/>
        </include>
        , sample.STABLE_ID AS "sampleId"
        FROM clinical_patient cp 
		INNER JOIN sample s ON cp.patientIdentifier = s.patientStableId 
		<include refid="wherePatient" />
		<if test="_parameter.containsKey('sortBy') and sortBy != null and projection != 'ID'">
            ORDER BY ${sortBy} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY clinical_patient.ATTR_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>
    
    <select id="fetchPatientClinicalDataCounts" resultType="org.cbioportal.model.ClinicalDataCount">
        SELECT count(*) as count,
        attrId as attributeId,
        value
        FROM clinical_patient
        <include refid="wherePatient"/>
        GROUP BY attrId, value
    </select>

</mapper>
