<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.legacy.persistence.mybatis.MutationMapper">

    <sql id="select">
        genetic_profile.stable_id AS "molecularProfileId",
        sample.stable_id AS "sampleId",
        patient.stable_id AS "patientId",
        mutation.entrez_gene_id AS "entrezGeneId",
        cancer_study.cancer_study_identifier AS "studyId"
        <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
            ,
            mutation.center AS "center",
            mutation.mutation_status AS "mutationStatus",
            mutation.validation_status AS "validationStatus",
            mutation.tumor_alt_count AS "tumorAltCount",
            mutation.tumor_ref_count AS "tumorRefCount",
            mutation.normal_alt_count AS "normalAltCount",
            mutation.normal_ref_count AS "normalRefCount",
            mutation.amino_acid_change AS "aminoAcidChange",
            mutation_event.chr AS "chr",
            mutation_event.start_position AS "startPosition",
            mutation_event.end_position AS "endPosition",
            mutation_event.reference_allele AS "referenceAllele",
            mutation_event.tumor_seq_allele AS "tumorSeqAllele",
            mutation_event.protein_change AS "proteinChange",
            mutation_event.mutation_type AS "mutationType",
            mutation_event.ncbi_build AS "ncbiBuild",
            mutation_event.variant_type AS "variantType",
            mutation_event.refseq_mrna_id AS "refseqMrnaId",
            mutation_event.protein_pos_start AS "proteinPosStart",
            mutation_event.protein_pos_end AS "proteinPosEnd",
            mutation_event.keyword AS "keyword",
            mutation.annotation_json AS "annotationJSON",
            alteration_driver_annotation.driver_filter AS "driverFilter",
            alteration_driver_annotation.driver_filter_annotation AS "driverFilterAnnotation",
            alteration_driver_annotation.driver_tiers_filter AS "driverTiersFilter",
            alteration_driver_annotation.driver_tiers_filter_annotation as "driverTiersFilterAnnotation"
        </if>
        <if test="projection == 'DETAILED'">
            ,
            <include refid="org.cbioportal.legacy.persistence.mybatis.GeneMapper.select">
                <property name="prefix" value="GENE."/>
            </include>
            ,
            <include refid="getAlleleSpecificCopyNumber">
                <property name="prefix" value="alleleSpecificCopyNumber."/>
            </include>
        </if>
    </sql>

    <sql id="projectionAndLimitFilter">
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY "${sortBy}" ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY genetic_profile.stable_id ASC, sample.stable_id ASC, mutation.entrez_gene_id ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </sql>

    <sql id="from">
        FROM mutation
        INNER JOIN genetic_profile ON mutation.genetic_profile_id = genetic_profile.genetic_profile_id
        INNER JOIN sample ON mutation.sample_id = sample.internal_id
        INNER JOIN patient ON sample.patient_id = patient.internal_id
        INNER JOIN cancer_study ON patient.cancer_study_id = cancer_study.cancer_study_id
        LEFT JOIN alteration_driver_annotation ON
                mutation.genetic_profile_id = alteration_driver_annotation.genetic_profile_id
            AND mutation.sample_id = alteration_driver_annotation.sample_id
            AND mutation.mutation_event_id = alteration_driver_annotation.alteration_event_id
    </sql>

    <sql id="where">
        <where>
            genetic_profile.stable_id = #{molecularProfileId}
            <if test="sampleIds != null and !sampleIds.isEmpty()">
                AND sample.stable_id IN
                    <foreach item="item" collection="sampleIds" open="(" separator="," close=")">#{item}</foreach>
            </if>
            <if test="_parameter.containsKey('entrezGeneIds') and entrezGeneIds != null and !entrezGeneIds.isEmpty()">
                AND mutation.entrez_gene_id IN
                    <foreach item="item" collection="entrezGeneIds" open="(" separator="," close=")">#{item}</foreach>
            </if>
            <if test="_parameter.containsKey('geneQueries') and geneQueries != null and !geneQueries.isEmpty()">
                <include refid="whereWithGeneQueries"/>
            </if>
            <if test="snpOnly == true">
                AND mutation_event.reference_allele IN ('A','T','C','G')
                AND mutation_event.tumor_seq_allele IN ('A','T','C','G')
            </if>
        </where>
    </sql>

    <sql id="whereBySampleListId">
        <where>
            genetic_profile.stable_id = #{molecularProfileId}
            AND mutation.sample_id IN
            (
                SELECT sample_list_list.sample_id FROM sample_list_list
                INNER JOIN sample_list ON sample_list_list.list_id = sample_list.list_id
                WHERE sample_list.stable_id = #{sampleListId}
                AND sample_list_list.sample_id = mutation.sample_id
            )
            <if test="entrezGeneIds != null and !entrezGeneIds.isEmpty()">
                AND mutation.entrez_gene_id IN
                    <foreach item="item" collection="entrezGeneIds" open="(" separator="," close=")">#{item}</foreach>
            </if>
            <if test="snpOnly == true">
                AND mutation_event.reference_allele IN ('A','T','C','G')
                AND mutation_event.tumor_seq_allele IN ('A','T','C','G')
            </if>
        </where>
    </sql>

    <sql id="whereInMultipleMolecularProfiles">
        <where>
            <if test="sampleIds != null and !sampleIds.isEmpty()">
                mutation.sample_id IN (
                SELECT sample.internal_id FROM sample
                INNER JOIN patient ON sample.patient_id = patient.internal_id
                INNER JOIN genetic_profile ON patient.cancer_study_id = genetic_profile.cancer_study_id
                WHERE
                <if test="@java.util.Arrays@stream(molecularProfileIds.toArray()).distinct().count() == 1">
                    genetic_profile.stable_id = #{molecularProfileIds[0]} AND
                    sample.stable_id IN
                        <foreach item="item" collection="sampleIds" open="(" separator="," close=")">#{item}</foreach>
                </if>
                <if test="@java.util.Arrays@stream(molecularProfileIds.toArray()).distinct().count() > 1">
                    (sample.stable_id, genetic_profile.stable_id) IN
                        <foreach index="i" collection="sampleIds" open="(" separator="," close=")">(#{sampleIds[${i}]},#{molecularProfileIds[${i}]})</foreach>
                    AND genetic_profile.stable_id IN
                        <foreach item="item" collection="molecularProfileIds" open="(" separator="," close=")">#{item}</foreach>
                </if>
                )
            </if>
            <if test="sampleIds == null || sampleIds.isEmpty()">
                genetic_profile.stable_id IN
                    <foreach item="item" collection="molecularProfileIds" open="(" separator="," close=")">#{item}</foreach>
            </if>
            <if test="_parameter.containsKey('entrezGeneIds') and entrezGeneIds != null and !entrezGeneIds.isEmpty()">
                AND mutation.entrez_gene_id IN
                    <foreach item="item" collection="entrezGeneIds" open="(" separator="," close=")">#{item}</foreach>
            </if>
            <if test="_parameter.containsKey('geneQueries') and geneQueries != null and !geneQueries.isEmpty()">
                <include refid="whereWithGeneQueries"/>
            </if>
            <if test="snpOnly == true">
                AND mutation_event.reference_allele IN ('A','T','C','G')
                AND mutation_event.tumor_seq_allele IN ('A','T','C','G')
            </if>
        </where>
    </sql>

    <sql id="whereWithGeneQueries">
        <if test="(_parameter.containsKey('geneQueries') and geneQueries != null and !geneQueries.isEmpty())">
            AND
            <foreach item="geneFilterQuery" collection="geneQueries" open="(" separator=" OR " close=")">
                ( mutation.entrez_gene_id = '${geneFilterQuery.getEntrezGeneId()}'
                <bind name="allMutationStatusSelected" value="geneFilterQuery.getIncludeGermline() and geneFilterQuery.getIncludeSomatic() and geneFilterQuery.getIncludeUnknownStatus()" />
                <bind name="noMutationStatusSelected" value="not geneFilterQuery.getIncludeGermline() and not geneFilterQuery.getIncludeSomatic() and not geneFilterQuery.getIncludeUnknownStatus()" />
                <choose>
                    <when test="not allMutationStatusSelected and not noMutationStatusSelected">
                        <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                            <if test="geneFilterQuery.getIncludeGermline()">
                                OR LOWER(mutation.mutation_status) = 'germline'
                            </if>
                            <if test="geneFilterQuery.getIncludeSomatic()">
                                OR LOWER(mutation.mutation_status) = 'somatic'
                            </if>
                            <if test="geneFilterQuery.getIncludeUnknownStatus()">
                                OR LOWER(mutation.mutation_status) NOT IN ('somatic', 'germline')
                            </if>
                        </trim>
                    </when>
                    <when test="noMutationStatusSelected">
                        AND NULL
                    </when>
                    <otherwise>
                        <!--when allMutationStatusSelected do not filter-->
                    </otherwise>
                </choose>
                <bind name="allDriverAnnotationsSelected" value="geneFilterQuery.getIncludeDriver() and geneFilterQuery.getIncludeVUS() and geneFilterQuery.getIncludeUnknownOncogenicity()" />
                <bind name="noDriverAnnotationsSelected" value="not geneFilterQuery.getIncludeDriver() and not geneFilterQuery.getIncludeVUS() and not geneFilterQuery.getIncludeUnknownOncogenicity()" />
                <choose>
                    <when test="not allDriverAnnotationsSelected and not noDriverAnnotationsSelected">
                        <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                            <if test="geneFilterQuery.getIncludeDriver()">
                                OR LOWER(alteration_driver_annotation.driver_filter) = 'putative_driver'
                            </if>
                            <if test="geneFilterQuery.getIncludeVUS()">
                                OR LOWER(alteration_driver_annotation.driver_filter) = 'putative_passenger'
                            </if>
                            <if test="geneFilterQuery.getIncludeUnknownOncogenicity()">
                                OR alteration_driver_annotation.driver_filter IS NULL
                                OR LOWER(alteration_driver_annotation.driver_filter) IN ('unknown', 'na', '')
                            </if>
                        </trim>
                    </when>
                    <when test="noDriverAnnotationsSelected">
                        AND NULL
                    </when>
                    <otherwise>
                        <!--when allDriverAnnotationsSelected do not filter-->
                    </otherwise>
                </choose>
                <bind name="allTierOptionsSelected" value="(geneFilterQuery.getSelectedTiers() != null and geneFilterQuery.getSelectedTiers().hasAll()) and geneFilterQuery.getIncludeUnknownTier()" />
                <bind name="noTierOptionsSelected" value="(geneFilterQuery.getSelectedTiers() == null or geneFilterQuery.getSelectedTiers().hasNone()) and not geneFilterQuery.getIncludeUnknownTier()" />
                <bind name="allExceptUnknownTierOptionsSelected" value="(geneFilterQuery.getSelectedTiers() != null and geneFilterQuery.getSelectedTiers().hasAll()) and not geneFilterQuery.getIncludeUnknownTier()" />
                <choose>
                    <when test="allExceptUnknownTierOptionsSelected">
                        AND NOT alteration_driver_annotation.driver_tiers_filter IS NULL
                        AND NOT LOWER(alteration_driver_annotation.driver_tiers_filter) IN ('', 'na', 'unknown')
                    </when>
                    <when test="not allTierOptionsSelected and not noTierOptionsSelected">
                        <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                            <if test="geneFilterQuery.getSelectedTiers() != null and geneFilterQuery.getSelectedTiers().hasValues()">
                                OR alteration_driver_annotation.driver_tiers_filter IN
                                    <foreach item="item" collection="geneFilterQuery.getSelectedTiers()" open="(" separator="," close=")">#{item}</foreach>
                            </if>
                            <if test="geneFilterQuery.getIncludeUnknownTier()">
                                OR alteration_driver_annotation.driver_tiers_filter IS NULL
                                OR LOWER(alteration_driver_annotation.driver_tiers_filter) IN ('', 'na', 'unknown')
                            </if>
                        </trim>
                    </when>
                    <when test="noTierOptionsSelected">
                        AND NULL
                    </when>
                    <otherwise>
                        <!--when allTierOptionsSelected do not filter-->
                    </otherwise>
                </choose>
                )
            </foreach>
        </if>
    </sql>

    <sql id="getAlleleSpecificCopyNumber">
        allele_specific_copy_number.ascn_integer_copy_number AS "${prefix}ascnIntegerCopyNumber",
        allele_specific_copy_number.ascn_method AS "${prefix}ascnMethod",
        allele_specific_copy_number.ccf_expected_copies_upper AS "${prefix}ccfExpectedCopiesUpper",
        allele_specific_copy_number.ccf_expected_copies AS "${prefix}ccfExpectedCopies",
        allele_specific_copy_number.clonal AS "${prefix}clonal",
        allele_specific_copy_number.minor_copy_number AS "${prefix}minorCopyNumber",
        allele_specific_copy_number.expected_alt_copies AS "${prefix}expectedAltCopies",
        allele_specific_copy_number.total_copy_number AS "${prefix}totalCopyNumber"
    </sql>

    <sql id="includeAlleleSpecificCopyNumber">
        LEFT JOIN allele_specific_copy_number ON mutation.mutation_event_id = allele_specific_copy_number.mutation_event_id
        AND mutation.genetic_profile_id = allele_specific_copy_number.genetic_profile_id
        AND mutation.sample_id = allele_specific_copy_number.sample_id
    </sql>

    <resultMap id="genomicDataCountItem" type="org.cbioportal.legacy.model.GenomicDataCountItem">
        <id property="hugoGeneSymbol" column="hugoGeneSymbol"/>
        <id property="profileType" column="profileType"/>
        <collection property="counts" ofType="org.cbioportal.legacy.model.GenomicDataCount" resultMap="genomicDataCount"/>
    </resultMap>

    <resultMap id="genomicDataCount" type="org.cbioportal.legacy.model.GenomicDataCount">
        <result property="label" column="label"/>
        <result property="value" column="value"/>
        <result property="count" column="count"/>
        <result property="uniqueCount" column="uniqueCount"/>
    </resultMap>


    <select id="getMutationsBySampleListId" resultType="org.cbioportal.legacy.model.Mutation">
        SELECT
        <include refid="select"/>
        <include refid="from"/>
        INNER JOIN mutation_event ON mutation.mutation_event_id = mutation_event.mutation_event_id
        <if test="projection == 'DETAILED'">
            INNER JOIN gene ON mutation.entrez_gene_id = gene.entrez_gene_id
            <include refid="includeAlleleSpecificCopyNumber"/>
        </if>
        <include refid="whereBySampleListId"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY "${sortBy}" ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY genetic_profile.stable_id ASC, sample.stable_id ASC, mutation.entrez_gene_id ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaMutationsBySampleListId" resultType="org.cbioportal.legacy.model.meta.MutationMeta">
        SELECT
        COUNT(*) AS "totalCount",
        COUNT(DISTINCT(mutation.sample_id)) AS "sampleCount"
        <include refid="from"/>
        INNER JOIN mutation_event ON mutation.mutation_event_id = mutation_event.mutation_event_id
        <include refid="whereBySampleListId"/>
    </select>

    <select id="getMutationsInMultipleMolecularProfiles" resultType="org.cbioportal.legacy.model.Mutation">
        SELECT
        <include refid="select"/>
        <include refid="from"/>
        INNER JOIN mutation_event ON mutation.mutation_event_id = mutation_event.mutation_event_id
        <if test="projection == 'DETAILED'">
            INNER JOIN gene ON mutation.entrez_gene_id = gene.entrez_gene_id
            <include refid="includeAlleleSpecificCopyNumber"/>
        </if>
        <include refid="whereInMultipleMolecularProfiles"/>
        <include refid="projectionAndLimitFilter"/>
    </select>

    <select id="getMutationsInMultipleMolecularProfilesByGeneQueries" resultType="org.cbioportal.legacy.model.Mutation">
        SELECT
        <include refid="select"/>
        <include refid="from"/>
        INNER JOIN mutation_event ON mutation.mutation_event_id = mutation_event.mutation_event_id
        <if test="projection == 'DETAILED'">
            INNER JOIN gene ON mutation.entrez_gene_id = gene.entrez_gene_id
            <include refid="includeAlleleSpecificCopyNumber"/>
        </if>
        <include refid="whereInMultipleMolecularProfiles"/>
        <include refid="projectionAndLimitFilter"/>
    </select>

    <select id="getMetaMutationsInMultipleMolecularProfiles" resultType="org.cbioportal.legacy.model.meta.MutationMeta">
        SELECT
        COUNT(*) AS "totalCount",
        COUNT(DISTINCT(mutation.sample_id)) AS "sampleCount"
        <include refid="from"/>
        INNER JOIN mutation_event ON mutation.mutation_event_id = mutation_event.mutation_event_id
        <include refid="whereInMultipleMolecularProfiles"/>
    </select>

    <select id="getMetaMutationsBySampleIds" resultType="org.cbioportal.legacy.model.meta.MutationMeta">
        SELECT
        COUNT(*) AS "totalCount",
        COUNT(DISTINCT(mutation.sample_id)) AS "sampleCount"
        <include refid="from"/>
        INNER JOIN mutation_event ON mutation_event.mutation_event_id = mutation.mutation_event_id
        <include refid="where"/>
    </select>

    <select id="getSampleCountByEntrezGeneIdsAndSampleIds" resultType="org.cbioportal.legacy.model.MutationCountByGene">
        SELECT
        mutation.entrez_gene_id AS "entrezGeneId",
        <!-- TODO: check this-->
        ANY_VALUE(gene.hugo_gene_symbol) AS "hugoGeneSymbol",
        COUNT(*) AS "totalCount",
        COUNT(DISTINCT(mutation.sample_id)) AS "numberOfAlteredCases"
        FROM mutation
            INNER JOIN mutation_event ON mutation_event.mutation_event_id = mutation.mutation_event_id
            INNER JOIN genetic_profile ON mutation.genetic_profile_id = genetic_profile.genetic_profile_id
            INNER JOIN sample ON mutation.sample_id = sample.internal_id
            INNER JOIN gene ON mutation.entrez_gene_id = gene.entrez_gene_id
        <include refid="where"/>
        GROUP BY mutation.entrez_gene_id
    </select>

    <select id="getMutationCountByPosition" resultType="org.cbioportal.legacy.model.MutationCountByPosition">
        SELECT
            #{entrezGeneId} AS "entrezGeneId",
            #{proteinPosStart} AS "proteinPosStart",
            #{proteinPosEnd} AS "proteinPosEnd",
        COUNT(*) AS "count"
        FROM mutation
            INNER JOIN mutation_event ON mutation.mutation_event_id = mutation_event.mutation_event_id
        WHERE mutation_event.entrez_gene_id = #{entrezGeneId}
            AND mutation_event.protein_pos_start >= #{proteinPosStart}
            AND mutation_event.protein_pos_end <![CDATA[ <= ]]> #{proteinPosEnd}
    </select>

    <select id="getMutationCountsByType" resultMap="genomicDataCountItem">
        SELECT
            <!-- TODO: check this-->
            ANY_VALUE(gene.hugo_gene_symbol) as hugoGeneSymbol,
            #{profileType} as profileType,
            REPLACE(mutation_event.mutation_type, '_', ' ') AS label,
            mutation_event.mutation_type AS value,
            COUNT(*) AS count,
            COUNT(DISTINCT(sample.internal_id)) AS uniqueCount
        <include refid="from"/>
            INNER JOIN mutation_event ON mutation.mutation_event_id = mutation_event.mutation_event_id
            INNER JOIN gene ON mutation.entrez_gene_id = gene.entrez_gene_id
        <include refid="whereInMultipleMolecularProfiles"/>
        GROUP BY mutation_event.mutation_type
    </select>
</mapper>
